
==================== FINAL INTERFACE ====================
2017-06-28 11:47:29.8185232 UTC

interface FunGE_1T23dZdtGeR6t6Mwex8FFS:Graphics.UI.Fungen.Game 7103
  interface hash: a160453f4da43b3ec2bcf7cd268f0af8
  ABI hash: 242c57370acd0bff1108100111d54a9f
  export-list hash: 7d2e43115f047893962699afc7a6a4c0
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 0cb7566441de72ed1fb999584347995f
  sig of: Nothing
  used TH splices: False
  where
exports:
  Graphics.UI.Fungen.Game.addObjectsToGroup
  Graphics.UI.Fungen.Game.addObjectsToNewGroup
  Graphics.UI.Fungen.Game.clearScreen
  Graphics.UI.Fungen.Game.createGame
  Graphics.UI.Fungen.Game.destroyObject
  Graphics.UI.Fungen.Game.destroyObjects
  Graphics.UI.Fungen.Game.disableGameFlags
  Graphics.UI.Fungen.Game.disableMapDrawing
  Graphics.UI.Fungen.Game.disableObjectsDrawing
  Graphics.UI.Fungen.Game.disableObjectsMoving
  Graphics.UI.Fungen.Game.drawAllObjects
  Graphics.UI.Fungen.Game.drawMap
  Graphics.UI.Fungen.Game.drawObject
  Graphics.UI.Fungen.Game.enableGameFlags
  Graphics.UI.Fungen.Game.enableMapDrawing
  Graphics.UI.Fungen.Game.enableObjectsDrawing
  Graphics.UI.Fungen.Game.enableObjectsMoving
  Graphics.UI.Fungen.Game.findObject
  Graphics.UI.Fungen.Game.findObjectManager
  Graphics.UI.Fungen.Game.getGameAttribute
  Graphics.UI.Fungen.Game.getGameFlags
  Graphics.UI.Fungen.Game.getGameState
  Graphics.UI.Fungen.Game.getObjectAsleep
  Graphics.UI.Fungen.Game.getObjectAttribute
  Graphics.UI.Fungen.Game.getObjectGroupName
  Graphics.UI.Fungen.Game.getObjectManagers
  Graphics.UI.Fungen.Game.getObjectName
  Graphics.UI.Fungen.Game.getObjectPosition
  Graphics.UI.Fungen.Game.getObjectSize
  Graphics.UI.Fungen.Game.getObjectSpeed
  Graphics.UI.Fungen.Game.getObjectsFromGroup
  Graphics.UI.Fungen.Game.getTileFromIndex
  Graphics.UI.Fungen.Game.getTileFromWindowPosition
  Graphics.UI.Fungen.Game.liftIOtoIOGame
  Graphics.UI.Fungen.Game.liftIOtoIOGame'
  Graphics.UI.Fungen.Game.moveAllObjects
  Graphics.UI.Fungen.Game.objectBottomMapCollision
  Graphics.UI.Fungen.Game.objectBottomMapFutureCollision
  Graphics.UI.Fungen.Game.objectLeftMapCollision
  Graphics.UI.Fungen.Game.objectLeftMapFutureCollision
  Graphics.UI.Fungen.Game.objectListObjectCollision
  Graphics.UI.Fungen.Game.objectListObjectFutureCollision
  Graphics.UI.Fungen.Game.objectRightMapCollision
  Graphics.UI.Fungen.Game.objectRightMapFutureCollision
  Graphics.UI.Fungen.Game.objectTopMapCollision
  Graphics.UI.Fungen.Game.objectTopMapFutureCollision
  Graphics.UI.Fungen.Game.objectsCollision
  Graphics.UI.Fungen.Game.objectsFutureCollision
  Graphics.UI.Fungen.Game.pointsObjectCollision
  Graphics.UI.Fungen.Game.pointsObjectListCollision
  Graphics.UI.Fungen.Game.printOnPrompt
  Graphics.UI.Fungen.Game.printOnScreen
  Graphics.UI.Fungen.Game.printText
  Graphics.UI.Fungen.Game.randomDouble
  Graphics.UI.Fungen.Game.randomFloat
  Graphics.UI.Fungen.Game.randomInt
  Graphics.UI.Fungen.Game.replaceObject
  Graphics.UI.Fungen.Game.reverseXSpeed
  Graphics.UI.Fungen.Game.reverseYSpeed
  Graphics.UI.Fungen.Game.runIOGame
  Graphics.UI.Fungen.Game.runIOGameM
  Graphics.UI.Fungen.Game.setCurrentMapIndex
  Graphics.UI.Fungen.Game.setGameAttribute
  Graphics.UI.Fungen.Game.setGameFlags
  Graphics.UI.Fungen.Game.setGameState
  Graphics.UI.Fungen.Game.setObjectAsleep
  Graphics.UI.Fungen.Game.setObjectAttribute
  Graphics.UI.Fungen.Game.setObjectCurrentPicture
  Graphics.UI.Fungen.Game.setObjectManagers
  Graphics.UI.Fungen.Game.setObjectPosition
  Graphics.UI.Fungen.Game.setObjectSpeed
  Graphics.UI.Fungen.Game.showFPS
  Graphics.UI.Fungen.Game.wait
  Graphics.UI.Fungen.Game.Game
  Graphics.UI.Fungen.Game.IOGame
module dependencies: Graphics.UI.Fungen.Loader
                     Graphics.UI.Fungen.Map Graphics.UI.Fungen.Objects
                     Graphics.UI.Fungen.Text Graphics.UI.Fungen.Types
                     Graphics.UI.Fungen.Util
package dependencies: GLURaw-2.0.0.2@GLURa_BVPeDyl0qVBLMH9QT3LHA9
                      GLUT-2.7.0.10@GLUT_AuhRxWClWjI32vVqOBTDkD
                      ObjectName-1.1.0.1@Objec_AzE7v9VWZHoFL7IhUyR6M2
                      OpenGLRaw-3.2.1.0@OpenG_GKIwHGr93kb6IlKNvuJzKp
                      OpenGL-3.0.1.0@OpenG_HDgoWhJAAmk1vqUKnMSbhC
                      StateVar-1.1.0.4@State_IOvB80WkYNkEizdt0JVpzy
                      Win32-2.3.1.0@Win32_ELFLzTRksT8Dql3wobiWvb
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      fixed-0.2.1.1@fixed_ByTlPuXIaPTB7THXhnn80n ghc-prim-0.4.0.0
                      half-0.2.2.3@half_5nzVTR1xHEH4euBf9ZdTFv integer-gmp-1.0.0.0
                      random-1.1@rando_7Qv4dDT5WBF9U3tMWkytIb
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      time-1.5.0.1@time_IYbjC7tGONY15oDy1fGJKz
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_IYbjC7tGONY15oDy1fGJKz:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_IYbjC7tGONY15oDy1fGJKz:Data.Time.Format.Parse
         time-1.5.0.1@time_IYbjC7tGONY15oDy1fGJKz:Data.Time.LocalTime.LocalTime
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
import  -/  Graphics.UI.Fungen.Loader f24d2703d632deff041b19fd2018857e
  exports: dc3af7888dcfa4fd82d5322e42052e3d
  FilePictureList 66496d5d334aab40dd115f000c4c4a69
  loadBitmapList c6eb3ee191f271b2d005ade89454c12c
import  -/  Graphics.UI.Fungen.Map b6e0260dd8790a7481a84d2210a9e44b
  exports: d775bc95dffcf787c0c16498da61eb4d
  GameMap d60b958266525b239e58ec4acbb2bdbe
  Tile 9f9f40d53b20d0b3ad13f51ca2e8a491
  clearGameScreen bfd284c0d4a256e0794f4b0b59ff9bcc
  drawGameMap 318fd1f84b08ef9498342581cd546af9
  getCurrentMap 963a08164f769a1e1f00701aa73f0636
  getMapSize 10b40b8af9095b5f815d44f1747fe73c
  getTileMapScroll be801e79c9089ba096d3b697c0006120
  getTileMapSize 02417c65e63d931ffbb13239afd1d4df
  getTileMapTileMatrix e9faea82bbdb22ac10ce5e1366f1d25d
  getTileMapTileSize 26c403715a45d220f4aeb106709f7f0a
  isMultiMap f16fe25a95f58a39b47fe798244b06d4
  isTileMap 96c9c37af83ce317fc7a938e636948f3
  updateCurrentIndex 689abd8eab31d335f2c854cf9ea57b5b
import  -/  Graphics.UI.Fungen.Objects e6cadc642ca019aab8b39b73fb90f14a
  exports: 9c33ce45a7d5b7d445364566939c9b1b
  GameObject d4d736dee85db9cb6ec4f037fdd9972e
  ObjectManager de2db806c297d18809decd251e9427c6
  addObjectsToManager d9bfc8aa4a6e65b899f39ed86f4dd412
  destroyGameObject a2bf060d1ac49fef6913888afeb1791b
  drawGameObject dff2ce8b559c57bc05e1364156f44aae
  drawGameObjects 5733d79477873e47bbc221f536478b62
  findObjectFromId 54d548e5b9f16b5665c1904622e951de
  getGameObjectAsleep a10374f7450e5aa950d92a9bbf03fcf5
  getGameObjectAttribute cf06e05d8429535d754a8ef22202d568
  getGameObjectId af56962d9ed62aa2069cc16ecce94e63
  getGameObjectManagerName e43bf39a18d01ae5db8296b7a0e2a87b
  getGameObjectName 89dba856204352d2fe553f9f437c3c03
  getGameObjectPosition e8ed94261efae2c7d60cbcd7c8291e4d
  getGameObjectSize 170e898e31143cf29147d901637ce06a
  getGameObjectSpeed 3c1fbe0cd823a52551bfc8ba03d54c40
  getObjectManagerObjects 9414540a4ae0db4bbbfa48553bb11f26
  moveGameObjects 672db7e65eb8a2fa5fb7dfc757461670
  objectGroup 27908c14b1fd90478390e15fde1c2403
  searchGameObject ebb4a9257c7c878f79f642ccf72983b2
  searchObjectManager a8efd98db28055e5844a2e6a6f5bc298
  updateObject a383104139f4aefbcfd27ceb601233d5
  updateObjectAsleep ae8cdf35cc3dec0996de381ec7e666ca
  updateObjectAttribute 1be48e10c2da88916e2c2b92bf8a6d0f
  updateObjectPicture d4d5fef26549838d310eeffa766d32b5
  updateObjectPosition 1f53cfe02552db350d1fe6fd598f9324
  updateObjectSpeed 93384ad88b35617f5bf55000ec49fbc7
import  -/  Graphics.UI.Fungen.Text 673daff94813132004981158c4d24ee5
  exports: c9145609f323b354c23dfdf859fb366f
  Text 530c8f0a1594d17412164be312ac161b
  putGameText b4ce24bb64203b1b0b116d1beceed347
import  -/  Graphics.UI.Fungen.Types 266c0848bd0d02b9711b437939844328
  exports: 5a8515e956ff2a99708d0d74d12ae2e4
  InvList 32bfe2a33bc27a7c7c6c8d7c01d98acc
  WindowConfig 4da2bc592ac453c50b90d843e904c64d
import  -/  Graphics.UI.Fungen.Util 1dc50c7d9817175bd0524f70badc9c85
  exports: d89e4436dc42c1dda1231ce02c7c72ce
  matrixSize 928fa98ce83ff01eef5a6e8a710d8c50
  pathAndInv2color3List 424de9cf5f92eb89f6844a98f7276d85
  randDouble 390dc16b749233dd1989644a468a0026
  randFloat 6a9055bcc056d1525a41c042b5818e1c
  randInt b21799c9f046aa6f97b059b4501fbcab
  texStuff 02769941fcdc5491bc1cc39899ddfdd5
import  -/  GLUT-2.7.0.10@GLUT_AuhRxWClWjI32vVqOBTDkD:Graphics.UI.GLUT 5f96c81bc741688b59291cc04889046c
import  -/  GLUT-2.7.0.10@GLUT_AuhRxWClWjI32vVqOBTDkD:Graphics.UI.GLUT.Raw.Fonts 03fce8fc16bbb2e52d3a5de4a918fb43
import  -/  GLUT-2.7.0.10@GLUT_AuhRxWClWjI32vVqOBTDkD:Graphics.UI.GLUT.State 31d02a0d710153d91610a5e89c7273b5
import  -/  ObjectName-1.1.0.1@Objec_AzE7v9VWZHoFL7IhUyR6M2:Data.ObjectName 5c9681ddabb625b913365ef918c9b07e
import  -/  OpenGLRaw-3.2.1.0@OpenG_GKIwHGr93kb6IlKNvuJzKp:Graphics.GL.Types dcfcd78bfbb0424c346b4cc12e92f0c2
import  -/  OpenGL-3.0.1.0@OpenG_HDgoWhJAAmk1vqUKnMSbhC:Graphics.Rendering.OpenGL fd51d1cc1b32b2dc8d731f8d5809eb7e
import  -/  OpenGL-3.0.1.0@OpenG_HDgoWhJAAmk1vqUKnMSbhC:Graphics.Rendering.OpenGL.GL.Texturing.TextureObject d26537372ba973dddf8ce811898bbb6e
import  -/  OpenGL-3.0.1.0@OpenG_HDgoWhJAAmk1vqUKnMSbhC:Graphics.Rendering.OpenGL.GLU.Quadrics d3749c65221e49256f6e3c758f0da057
import  -/  StateVar-1.1.0.4@State_IOvB80WkYNkEizdt0JVpzy:Data.StateVar a47bcf36d75f50e1f83a933cd25c1485
import  -/  base-4.8.2.0:Control.Monad 480c5067477275068c9b98be08410df9
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.IORef 976e22a2a5bee98653c6ebd18a5d0d2f
import  -/  base-4.8.2.0:GHC.Base a4939789b2cfd60b36ed163e56a623cd
import  -/  base-4.8.2.0:GHC.Enum debc6de3086023a15993ab0cecffb90b
import  -/  base-4.8.2.0:GHC.IO bb5b81adcea33b14bd4abe16d7dde45f
import  -/  base-4.8.2.0:GHC.IORef 214f24404788140014fb59d5413cb1a5
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Real 1281efa9baf803bc7859d7efb89a38b3
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 638c10c4fd4901a0aca5b77c9f14123d
import  -/  base-4.8.2.0:Text.Printf 0276d4e7547f991f04a90f6b1e7f1f46
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
addDependentFile "C:\Users\Lenovo\AppData\Local\Programs\stack\x86_64-windows\ghc-7.10.3\lib\include\ghcversion.h"
addDependentFile ".stack-work\dist\2672c1f3\build\autogen\cabal_macros.h"
023f764656429577791b816b79fd1cc6
  $fApplicativeIOGame ::
    GHC.Base.Functor (Graphics.UI.Fungen.Game.IOGame t s u v) =>
    GHC.Base.Applicative (Graphics.UI.Fungen.Game.IOGame t s u v)
  DFunId[1]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(U,U)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ t
                      @ s
                      @ u
                      @ v
                      $dFunctor :: GHC.Base.Functor
                                     (Graphics.UI.Fungen.Game.IOGame t s u v).
                  @ (Graphics.UI.Fungen.Game.IOGame t s u v)
                  $dFunctor
                  (Graphics.UI.Fungen.Game.$fApplicativeIOGame_$cpure
                     @ t
                     @ s
                     @ u
                     @ v
                     $dFunctor)
                  (Graphics.UI.Fungen.Game.$fApplicativeIOGame_$c<*>
                     @ t
                     @ s
                     @ u
                     @ v
                     $dFunctor)
                  (Graphics.UI.Fungen.Game.$fApplicativeIOGame_$c*>
                     @ t
                     @ s
                     @ u
                     @ v
                     $dFunctor)
                  (Graphics.UI.Fungen.Game.$fApplicativeIOGame_$c<*
                     @ t
                     @ s
                     @ u
                     @ v
                     $dFunctor) -}
023f764656429577791b816b79fd1cc6
  $fApplicativeIOGame1 ::
    GHC.Base.Functor (Graphics.UI.Fungen.Game.IOGame t s u v) =>
    forall a b.
    Graphics.UI.Fungen.Game.IOGame t s u v (a -> b)
    -> Graphics.UI.Fungen.Game.IOGame t s u v a
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, b) #)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><C(C(S(LS))),1*C1(C1(U(U,1*U(U,1*C1(U)))))><L,1*C1(C1(U(U,1*U(U,U))))><L,U><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   $dFunctor :: GHC.Base.Functor
                                  (Graphics.UI.Fungen.Game.IOGame t s u v)
                   @ a
                   @ b
                   m1 :: Graphics.UI.Fungen.Game.IOGame t s u v (a -> b)
                   m2 :: Graphics.UI.Fungen.Game.IOGame t s u v a
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (m1
                         `cast`
                       (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                            <t>_R <s>_R <u>_R <v>_R <a -> b>_R)
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Graphics.UI.Fungen.Game.Game t s u v, a -> b)>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) s' v1 ->
                 case (m2
                         `cast`
                       (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                            <t>_R <s>_R <u>_R <v>_R <a>_R)
                         s')
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Graphics.UI.Fungen.Game.Game t s u v, a)>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild1 { (,) s'1 v2 ->
                 (# ipv2, (s'1, v1 v2) #) } } } }) -}
023f764656429577791b816b79fd1cc6
  $fApplicativeIOGame2 ::
    GHC.Base.Functor (Graphics.UI.Fungen.Game.IOGame t s u v) =>
    forall a.
    a
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, a) #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   $dFunctor :: GHC.Base.Functor
                                  (Graphics.UI.Fungen.Game.IOGame t s u v)
                   @ a
                   eta :: a
                   eta1 :: Graphics.UI.Fungen.Game.Game t s u v
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Graphics.UI.Fungen.Game.$fApplicativeIOGame3
                   @ a
                   @ t
                   @ s
                   @ u
                   @ v
                   eta
                   eta1
                   eta2) -}
ca8bee2681faa3166da354bc134e4789
  $fApplicativeIOGame3 ::
    a
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, a) #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ t
                   @ s
                   @ u
                   @ v
                   v1 :: a
                   s1 :: Graphics.UI.Fungen.Game.Game t s u v
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta, (s1, v1) #)) -}
023f764656429577791b816b79fd1cc6
  $fApplicativeIOGame_$c*> ::
    GHC.Base.Functor (Graphics.UI.Fungen.Game.IOGame t s u v) =>
    forall a b.
    Graphics.UI.Fungen.Game.IOGame t s u v a
    -> Graphics.UI.Fungen.Game.IOGame t s u v b
    -> Graphics.UI.Fungen.Game.IOGame t s u v b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(A,1*C1(C1(U)))><L,U><L,C(C1(U(U,1*U(U,U))))>,
     Unfolding: (\ @ t
                   @ s
                   @ u
                   @ v
                   $dFunctor :: GHC.Base.Functor
                                  (Graphics.UI.Fungen.Game.IOGame t s u v)
                   @ a
                   @ b
                   eta :: Graphics.UI.Fungen.Game.IOGame t s u v a
                   eta1 :: Graphics.UI.Fungen.Game.IOGame t s u v b ->
                 let {
                   m1 :: Graphics.UI.Fungen.Game.IOGame t s u v (b -> b)
                   = GHC.Base.<$
                       @ (Graphics.UI.Fungen.Game.IOGame t s u v)
                       $dFunctor
                       @ (b -> b)
                       @ a
                       (GHC.Base.id @ b)
                       eta
                 } in
                 (\ eta2 :: Graphics.UI.Fungen.Game.Game t s u v
                    eta3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (m1
                          `cast`
                        (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                             <t>_R <s>_R <u>_R <v>_R <b -> b>_R)
                          eta2)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Graphics.UI.Fungen.Game.Game t s u v, b -> b)>_R)
                         eta3 of ds1 { (#,#) ipv ipv1 ->
                  case ipv1 of wild { (,) s' v1 ->
                  case (eta1
                          `cast`
                        (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                             <t>_R <s>_R <u>_R <v>_R <b>_R)
                          s')
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Graphics.UI.Fungen.Game.Game t s u v, b)>_R)
                         ipv of ds2 { (#,#) ipv2 ipv3 ->
                  case ipv3 of wild1 { (,) s'1 v2 ->
                  (# ipv2, (s'1, v1 v2) #) } } } })
                   `cast`
                 (Trans
                      (<Graphics.UI.Fungen.Game.Game t s u v>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Graphics.UI.Fungen.Game.Game t s u v, b)>_R))
                      (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                <t>_R <s>_R <u>_R <v>_R <b>_R)))) -}
023f764656429577791b816b79fd1cc6
  $fApplicativeIOGame_$c<* ::
    GHC.Base.Functor (Graphics.UI.Fungen.Game.IOGame t s u v) =>
    forall a b.
    Graphics.UI.Fungen.Game.IOGame t s u v a
    -> Graphics.UI.Fungen.Game.IOGame t s u v b
    -> Graphics.UI.Fungen.Game.IOGame t s u v a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(1*C1(C1(U)),A)><L,U><L,C(C1(U(U,1*U(U,U))))>,
     Unfolding: (\ @ t
                   @ s
                   @ u
                   @ v
                   $dFunctor :: GHC.Base.Functor
                                  (Graphics.UI.Fungen.Game.IOGame t s u v)
                   @ a
                   @ b
                   eta :: Graphics.UI.Fungen.Game.IOGame t s u v a
                   eta1 :: Graphics.UI.Fungen.Game.IOGame t s u v b ->
                 let {
                   m1 :: Graphics.UI.Fungen.Game.IOGame t s u v (b -> a)
                   = GHC.Base.fmap
                       @ (Graphics.UI.Fungen.Game.IOGame t s u v)
                       $dFunctor
                       @ a
                       @ (b -> a)
                       (GHC.Base.const @ a @ b)
                       eta
                 } in
                 (\ eta2 :: Graphics.UI.Fungen.Game.Game t s u v
                    eta3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (m1
                          `cast`
                        (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                             <t>_R <s>_R <u>_R <v>_R <b -> a>_R)
                          eta2)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Graphics.UI.Fungen.Game.Game t s u v, b -> a)>_R)
                         eta3 of ds1 { (#,#) ipv ipv1 ->
                  case ipv1 of wild { (,) s' v1 ->
                  case (eta1
                          `cast`
                        (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                             <t>_R <s>_R <u>_R <v>_R <b>_R)
                          s')
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Graphics.UI.Fungen.Game.Game t s u v, b)>_R)
                         ipv of ds2 { (#,#) ipv2 ipv3 ->
                  case ipv3 of wild1 { (,) s'1 v2 ->
                  (# ipv2, (s'1, v1 v2) #) } } } })
                   `cast`
                 (Trans
                      (<Graphics.UI.Fungen.Game.Game t s u v>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Graphics.UI.Fungen.Game.Game t s u v, a)>_R))
                      (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                <t>_R <s>_R <u>_R <v>_R <a>_R)))) -}
023f764656429577791b816b79fd1cc6
  $fApplicativeIOGame_$c<*> ::
    GHC.Base.Functor (Graphics.UI.Fungen.Game.IOGame t s u v) =>
    forall a b.
    Graphics.UI.Fungen.Game.IOGame t s u v (a -> b)
    -> Graphics.UI.Fungen.Game.IOGame t s u v a
    -> Graphics.UI.Fungen.Game.IOGame t s u v b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><C(C(S(LS))),1*C1(C1(U(U,1*U(U,1*C1(U)))))><L,1*C1(C1(U(U,1*U(U,U))))><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.$fApplicativeIOGame1
                  `cast`
                (forall t s u v.
                 <GHC.Base.Functor (Graphics.UI.Fungen.Game.IOGame t s u v)>_R
                 ->_R forall a b.
                      <Graphics.UI.Fungen.Game.IOGame t s u v (a -> b)>_R
                      ->_R <Graphics.UI.Fungen.Game.IOGame t s u v a>_R
                      ->_R Trans
                               (<Graphics.UI.Fungen.Game.Game t s u v>_R
                                ->_R Sym (GHC.Types.NTCo:IO[0]
                                              <(Graphics.UI.Fungen.Game.Game t s u v, b)>_R))
                               (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                         <t>_R <s>_R <u>_R <v>_R <b>_R))) -}
023f764656429577791b816b79fd1cc6
  $fApplicativeIOGame_$cpure ::
    GHC.Base.Functor (Graphics.UI.Fungen.Game.IOGame t s u v) =>
    forall a. a -> Graphics.UI.Fungen.Game.IOGame t s u v a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.$fApplicativeIOGame2
                  `cast`
                (forall t s u v.
                 <GHC.Base.Functor (Graphics.UI.Fungen.Game.IOGame t s u v)>_R
                 ->_R forall a.
                      <a>_R
                      ->_R Trans
                               (<Graphics.UI.Fungen.Game.Game t s u v>_R
                                ->_R Sym (GHC.Types.NTCo:IO[0]
                                              <(Graphics.UI.Fungen.Game.Game t s u v, a)>_R))
                               (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                         <t>_R <s>_R <u>_R <v>_R <a>_R))) -}
023f764656429577791b816b79fd1cc6
  $fFunctorIOGame ::
    GHC.Base.Functor (Graphics.UI.Fungen.Game.IOGame t s u v)
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ t @ s @ u @ v.
                  @ (Graphics.UI.Fungen.Game.IOGame t s u v)
                  (Graphics.UI.Fungen.Game.$fFunctorIOGame_$cfmap @ t @ s @ u @ v)
                  (Graphics.UI.Fungen.Game.$fFunctorIOGame_$c<$ @ t @ s @ u @ v) -}
023f764656429577791b816b79fd1cc6
  $fFunctorIOGame1 ::
    a
    -> Graphics.UI.Fungen.Game.IOGame t s u v b
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, a) #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U><C(C(S(LS))),1*C1(C1(U(U,1*U(U,A))))><L,U><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   @ a
                   @ b
                   eta :: a
                   eta1 :: Graphics.UI.Fungen.Game.IOGame t s u v b
                   eta2 :: Graphics.UI.Fungen.Game.Game t s u v
                   eta3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (eta1
                         `cast`
                       (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                            <t>_R <s>_R <u>_R <v>_R <b>_R)
                         eta2)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Graphics.UI.Fungen.Game.Game t s u v, b)>_R)
                        eta3 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) s' v1 -> (# ipv, (s', eta) #) } }) -}
023f764656429577791b816b79fd1cc6
  $fFunctorIOGame2 ::
    (a -> b)
    -> Graphics.UI.Fungen.Game.IOGame t s u v a
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, b) #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,1*C1(U)><C(C(S(LS))),1*C1(C1(U(U,1*U(U,U))))><L,U><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   @ a
                   @ b
                   f :: a -> b
                   m1 :: Graphics.UI.Fungen.Game.IOGame t s u v a
                   s1 :: Graphics.UI.Fungen.Game.Game t s u v
                   s2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (m1
                         `cast`
                       (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                            <t>_R <s>_R <u>_R <v>_R <a>_R)
                         s1)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Graphics.UI.Fungen.Game.Game t s u v, a)>_R)
                        s2 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) s' v1 -> (# ipv, (s', f v1) #) } }) -}
023f764656429577791b816b79fd1cc6
  $fFunctorIOGame_$c<$ ::
    a
    -> Graphics.UI.Fungen.Game.IOGame t s u v b
    -> Graphics.UI.Fungen.Game.IOGame t s u v a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U><C(C(S(LS))),1*C1(C1(U(U,1*U(U,A))))><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.$fFunctorIOGame1
                  `cast`
                (forall t s u v a b.
                 <a>_R
                 ->_R <Graphics.UI.Fungen.Game.IOGame t s u v b>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, a)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <a>_R))) -}
023f764656429577791b816b79fd1cc6
  $fFunctorIOGame_$cfmap ::
    (a -> b)
    -> Graphics.UI.Fungen.Game.IOGame t s u v a
    -> Graphics.UI.Fungen.Game.IOGame t s u v b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,1*C1(U)><C(C(S(LS))),1*C1(C1(U(U,1*U(U,U))))><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.$fFunctorIOGame2
                  `cast`
                (forall t s u v a b.
                 <a -> b>_R
                 ->_R <Graphics.UI.Fungen.Game.IOGame t s u v a>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, b)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <b>_R))) -}
023f764656429577791b816b79fd1cc6
  $fMonadIOGame ::
    GHC.Base.Applicative (Graphics.UI.Fungen.Game.IOGame t s u v) =>
    GHC.Base.Monad (Graphics.UI.Fungen.Game.IOGame t s u v)
  DFunId[1]
  {- Arity: 1, Strictness: <L,U>m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ t
                      @ s
                      @ u
                      @ v
                      $dApplicative :: GHC.Base.Applicative
                                         (Graphics.UI.Fungen.Game.IOGame t s u v).
                  @ (Graphics.UI.Fungen.Game.IOGame t s u v)
                  $dApplicative
                  (Graphics.UI.Fungen.Game.$fMonadIOGame_$c>>=
                     @ t
                     @ s
                     @ u
                     @ v
                     $dApplicative)
                  (Graphics.UI.Fungen.Game.$fMonadIOGame_$c>>
                     @ t
                     @ s
                     @ u
                     @ v
                     $dApplicative)
                  (Graphics.UI.Fungen.Game.$fMonadIOGame_$creturn
                     @ t
                     @ s
                     @ u
                     @ v
                     $dApplicative)
                  (Graphics.UI.Fungen.Game.$fMonadIOGame_$cfail
                     @ t
                     @ s
                     @ u
                     @ v
                     $dApplicative) -}
023f764656429577791b816b79fd1cc6
  $fMonadIOGame1 ::
    GHC.Base.Applicative (Graphics.UI.Fungen.Game.IOGame t s u v) =>
    forall a.
    a
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, a) #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   $dApplicative :: GHC.Base.Applicative
                                      (Graphics.UI.Fungen.Game.IOGame t s u v)
                   @ a
                   eta :: a
                   eta1 :: Graphics.UI.Fungen.Game.Game t s u v
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Graphics.UI.Fungen.Game.$fApplicativeIOGame3
                   @ a
                   @ t
                   @ s
                   @ u
                   @ v
                   eta
                   eta1
                   eta2) -}
023f764656429577791b816b79fd1cc6
  $fMonadIOGame2 ::
    GHC.Base.Applicative (Graphics.UI.Fungen.Game.IOGame t s u v) =>
    forall a b.
    Graphics.UI.Fungen.Game.IOGame t s u v a
    -> (a -> Graphics.UI.Fungen.Game.IOGame t s u v b)
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, b) #)
  {- Arity: 5, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   $dApplicative :: GHC.Base.Applicative
                                      (Graphics.UI.Fungen.Game.IOGame t s u v)
                   @ a
                   @ b
                   eta :: Graphics.UI.Fungen.Game.IOGame t s u v a
                   eta1 :: a -> Graphics.UI.Fungen.Game.IOGame t s u v b
                   eta2 :: Graphics.UI.Fungen.Game.Game t s u v
                   eta3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Graphics.UI.Fungen.Game.$fMonadIOGame3
                   @ t
                   @ s
                   @ u
                   @ v
                   @ a
                   @ b
                   eta
                   eta1
                   eta2
                   eta3) -}
023f764656429577791b816b79fd1cc6
  $fMonadIOGame3 ::
    Graphics.UI.Fungen.Game.IOGame t s u v a
    -> (a -> Graphics.UI.Fungen.Game.IOGame t s u v b)
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, b) #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(LS))),1*C1(C1(U(U,1*U(U,U))))><L,1*C1(C1(C1(U(U,U))))><L,U><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   @ a
                   @ b
                   ds :: Graphics.UI.Fungen.Game.IOGame t s u v a
                   f :: a -> Graphics.UI.Fungen.Game.IOGame t s u v b
                   s1 :: Graphics.UI.Fungen.Game.Game t s u v
                   s2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (ds
                         `cast`
                       (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                            <t>_R <s>_R <u>_R <v>_R <a>_R)
                         s1)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Graphics.UI.Fungen.Game.Game t s u v, a)>_R)
                        s2 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) s' v1 ->
                 ((f v1)
                    `cast`
                  (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                       <t>_R <s>_R <u>_R <v>_R <b>_R)
                    s')
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <(Graphics.UI.Fungen.Game.Game t s u v, b)>_R)
                   ipv } }) -}
023f764656429577791b816b79fd1cc6
  $fMonadIOGame_$c>> ::
    GHC.Base.Applicative (Graphics.UI.Fungen.Game.IOGame t s u v) =>
    forall a b.
    Graphics.UI.Fungen.Game.IOGame t s u v a
    -> Graphics.UI.Fungen.Game.IOGame t s u v b
    -> Graphics.UI.Fungen.Game.IOGame t s u v b
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   $dApplicative :: GHC.Base.Applicative
                                      (Graphics.UI.Fungen.Game.IOGame t s u v)
                   @ a
                   @ b
                   m1 :: Graphics.UI.Fungen.Game.IOGame t s u v a
                   k :: Graphics.UI.Fungen.Game.IOGame t s u v b
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 ((Graphics.UI.Fungen.Game.$fMonadIOGame_$c>>=
                     @ t
                     @ s
                     @ u
                     @ v
                     $dApplicative
                     @ a
                     @ b
                     m1
                     (\ ds :: a -> k))
                    `cast`
                  (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                       <t>_R <s>_R <u>_R <v>_R <b>_R)
                    eta)
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <(Graphics.UI.Fungen.Game.Game t s u v, b)>_R)
                   eta1)
                  `cast`
                (forall t s u v.
                 <GHC.Base.Applicative (Graphics.UI.Fungen.Game.IOGame t s u v)>_R
                 ->_R forall a b.
                      <Graphics.UI.Fungen.Game.IOGame t s u v a>_R
                      ->_R <Graphics.UI.Fungen.Game.IOGame t s u v b>_R
                      ->_R Trans
                               (<Graphics.UI.Fungen.Game.Game t s u v>_R
                                ->_R Sym (GHC.Types.NTCo:IO[0]
                                              <(Graphics.UI.Fungen.Game.Game t s u v, b)>_R))
                               (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                         <t>_R <s>_R <u>_R <v>_R <b>_R))) -}
023f764656429577791b816b79fd1cc6
  $fMonadIOGame_$c>>= ::
    GHC.Base.Applicative (Graphics.UI.Fungen.Game.IOGame t s u v) =>
    forall a b.
    Graphics.UI.Fungen.Game.IOGame t s u v a
    -> (a -> Graphics.UI.Fungen.Game.IOGame t s u v b)
    -> Graphics.UI.Fungen.Game.IOGame t s u v b
  {- Arity: 5, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.$fMonadIOGame2
                  `cast`
                (forall t s u v.
                 <GHC.Base.Applicative (Graphics.UI.Fungen.Game.IOGame t s u v)>_R
                 ->_R forall a b.
                      <Graphics.UI.Fungen.Game.IOGame t s u v a>_R
                      ->_R <a -> Graphics.UI.Fungen.Game.IOGame t s u v b>_R
                      ->_R Trans
                               (<Graphics.UI.Fungen.Game.Game t s u v>_R
                                ->_R Sym (GHC.Types.NTCo:IO[0]
                                              <(Graphics.UI.Fungen.Game.Game t s u v, b)>_R))
                               (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                         <t>_R <s>_R <u>_R <v>_R <b>_R))) -}
023f764656429577791b816b79fd1cc6
  $fMonadIOGame_$cfail ::
    GHC.Base.Applicative (Graphics.UI.Fungen.Game.IOGame t s u v) =>
    forall a.
    GHC.Base.String -> Graphics.UI.Fungen.Game.IOGame t s u v a
  {- Arity: 2, Strictness: <B,A><B,U>b,
     Unfolding: InlineRule (2, True, True)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   $dApplicative :: GHC.Base.Applicative
                                      (Graphics.UI.Fungen.Game.IOGame t s u v)
                   @ a
                   eta :: [GHC.Types.Char] ->
                 GHC.Err.error @ (Graphics.UI.Fungen.Game.IOGame t s u v a) eta) -}
023f764656429577791b816b79fd1cc6
  $fMonadIOGame_$creturn ::
    GHC.Base.Applicative (Graphics.UI.Fungen.Game.IOGame t s u v) =>
    forall a. a -> Graphics.UI.Fungen.Game.IOGame t s u v a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.$fMonadIOGame1
                  `cast`
                (forall t s u v.
                 <GHC.Base.Applicative (Graphics.UI.Fungen.Game.IOGame t s u v)>_R
                 ->_R forall a.
                      <a>_R
                      ->_R Trans
                               (<Graphics.UI.Fungen.Game.Game t s u v>_R
                                ->_R Sym (GHC.Types.NTCo:IO[0]
                                              <(Graphics.UI.Fungen.Game.Game t s u v, a)>_R))
                               (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                         <t>_R <s>_R <u>_R <v>_R <a>_R))) -}
32e4b9490dc821c5b3dea465e1d9de66
  $sprintf3 ::
    GHC.Base.String -> [Text.Printf.UPrintf] -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: (\ fmts :: GHC.Base.String
                   args :: [Text.Printf.UPrintf] ->
                 GHC.Base.map
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   Text.Printf.$fIsCharChar_$cfromChar
                   (Text.Printf.uprintfs
                      fmts
                      (GHC.List.reverse1
                         @ Text.Printf.UPrintf
                         args
                         (GHC.Types.[] @ Text.Printf.UPrintf))
                      (GHC.Types.[] @ GHC.Types.Char))) -}
d9dc19ee40e3e1b8ea74290b5a2a20d9
  $wa ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 12,
     Strictness: <L,1*U(U,U,U,A,A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        (case w of wild { Graphics.UI.Fungen.Objects.GO ds ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                         case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                @ s
                                ds
                                ds4
                                ipv3 of ww10 { (#,,,,,,,,#) ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                         Graphics.UI.Fungen.Objects.destroyGameObject @ s ds3 ww13 ipv1 } })
                        ipv2 of s2# { DEFAULT ->
                 (# s2#,
                    (Graphics.UI.Fungen.Game.Game
                       @ t
                       @ s
                       @ u
                       @ v
                       ww
                       ww1
                       ww2
                       (GHC.STRef.STRef
                          @ GHC.Prim.RealWorld
                          @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                          ww3)
                         `cast`
                       (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                          s]>_N)
                       ww4
                       ww5
                       ww6
                       ww7
                       ww8
                       ww9,
                     GHC.Tuple.()) #) } } }) -}
416e5d93f1f6e7a99f64614238e1b9cb
  $wa1 ::
    GHC.Prim.MutVar#
      GHC.Prim.RealWorld (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 11,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U(U)><L,U><L,U(U)><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ t
                   @ s
                   @ u
                   @ v
                   ww :: GHC.Prim.MutVar#
                           GHC.Prim.RealWorld (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.IORef.IORef [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Graphics.UI.Fungen.Map.GameMap v)
                        ww
                        w of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   DEFAULT
                   -> case ww8
                             `cast`
                           (GHC.IORef.NTCo:IORef[0] <[Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]>_N) of ww10 { GHC.STRef.STRef ww11 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                             ww11
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ww6
                             `cast`
                           (GHC.IORef.NTCo:IORef[0] <Graphics.UI.Fungen.Types.WindowConfig>_N) of wild1 { GHC.STRef.STRef var# ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ Graphics.UI.Fungen.Types.WindowConfig
                             var#
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case ipv5 of wild2 { (,,) ds ds4 ds5 ->
                      case ds4 of wild3 { (,) winWidth winHeight ->
                      case Graphics.UI.Fungen.Map.drawGameMap1
                             @ v
                             wild
                             (case winWidth of wild4 { GHC.Types.I# i ->
                              GHC.Types.D# (GHC.Prim.int2Double# i) },
                              case winHeight of wild4 { GHC.Types.I# i ->
                              GHC.Types.D# (GHC.Prim.int2Double# i) })
                             ipv3
                             ipv4 of ds6 { (#,#) ipv6 ipv7 ->
                      (# ipv6,
                         (Graphics.UI.Fungen.Game.Game
                            @ t
                            @ s
                            @ u
                            @ v
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ (Graphics.UI.Fungen.Map.GameMap v)
                               ww)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <Graphics.UI.Fungen.Map.GameMap
                                                              v>_N)
                            ww1
                            ww2
                            ww3
                            ww4
                            ww5
                            wild1
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <Graphics.UI.Fungen.Types.WindowConfig>_N)
                            ww7
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                               ww11)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]>_N)
                            ww9,
                          ipv7) #) } } } } } } }
                   Graphics.UI.Fungen.Map.MultiMap ds2 ds3
                   -> case ww8
                             `cast`
                           (GHC.IORef.NTCo:IORef[0] <[Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]>_N) of ww10 { GHC.STRef.STRef ww11 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                             ww11
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case ww6
                             `cast`
                           (GHC.IORef.NTCo:IORef[0] <Graphics.UI.Fungen.Types.WindowConfig>_N) of wild1 { GHC.STRef.STRef var# ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ Graphics.UI.Fungen.Types.WindowConfig
                             var#
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      case ipv5 of wild2 { (,,) ds ds6 ds7 ->
                      case ds6 of wild3 { (,) winWidth winHeight ->
                      case Graphics.UI.Fungen.Map.drawGameMap1
                             @ v
                             (GHC.List.!! @ (Graphics.UI.Fungen.Map.GameMap v) ds2 ds3)
                             (case winWidth of wild4 { GHC.Types.I# i ->
                              GHC.Types.D# (GHC.Prim.int2Double# i) },
                              case winHeight of wild4 { GHC.Types.I# i ->
                              GHC.Types.D# (GHC.Prim.int2Double# i) })
                             ipv3
                             ipv4 of ds8 { (#,#) ipv6 ipv7 ->
                      (# ipv6,
                         (Graphics.UI.Fungen.Game.Game
                            @ t
                            @ s
                            @ u
                            @ v
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ (Graphics.UI.Fungen.Map.GameMap v)
                               ww)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <Graphics.UI.Fungen.Map.GameMap
                                                              v>_N)
                            ww1
                            ww2
                            ww3
                            ww4
                            ww5
                            wild1
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <Graphics.UI.Fungen.Types.WindowConfig>_N)
                            ww7
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                               ww11)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]>_N)
                            ww9,
                          ipv7) #) } } } } } } } } }) -}
f655992fbb0e7edb11170b52ca2dd785
  $wa10 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 12,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 case w of wild { Graphics.UI.Fungen.Objects.GO ds ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                        @ s
                        ds
                        ds3
                        ipv1 of ww10 { (#,,,,,,,,#) ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                 case ww15 of wild1 {
                   GHC.Types.False
                   -> case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                             ww3
                             ipv of ds10 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                             ww3
                             ipv2 of ds11 { (#,#) ipv4 ipv5 ->
                      (# ipv4,
                         (Graphics.UI.Fungen.Game.Game
                            @ t
                            @ s
                            @ u
                            @ v
                            ww
                            ww1
                            ww2
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                               ww3)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                               s]>_N)
                            ww4
                            ww5
                            ww6
                            ww7
                            ww8
                            ww9,
                          case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                 @ s
                                 ds
                                 ds3
                                 ipv3 of ww20 { (#,,,,,,,,#) ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ->
                          case ww27 of wild2 { (,) pX pY ->
                          case pX of wild3 { GHC.Types.D# x ->
                          case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                 @ s
                                 ds
                                 ds3
                                 ipv5 of ww30 { (#,,,,,,,,#) ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ->
                          case ww36 of wild4 { (,) sX sY ->
                          case sX of wild5 { GHC.Types.D# x1 ->
                          GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<##
                               (GHC.Prim.-## x (GHC.Prim./## x1 2.0))
                               0.0) } } } } } }) #) } }
                   GHC.Types.True
                   -> (# ipv,
                         (Graphics.UI.Fungen.Game.Game
                            @ t
                            @ s
                            @ u
                            @ v
                            ww
                            ww1
                            ww2
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                               ww3)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                               s]>_N)
                            ww4
                            ww5
                            ww6
                            ww7
                            ww8
                            ww9,
                          GHC.Types.False) #) } } } }) -}
b14ca132e01e4d5f33d631cbd0fdc247
  $wa11 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 12,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 case w of wild { Graphics.UI.Fungen.Objects.GO ds ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                        @ s
                        ds
                        ds3
                        ipv1 of ww10 { (#,,,,,,,,#) ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                 case ww15 of wild1 {
                   GHC.Types.False
                   -> case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                             ww3
                             ipv of ds10 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                             ww3
                             ipv2 of ds11 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                             ww3
                             ipv4 of ds12 { (#,#) ipv6 ipv7 ->
                      (# ipv6,
                         (Graphics.UI.Fungen.Game.Game
                            @ t
                            @ s
                            @ u
                            @ v
                            ww
                            ww1
                            ww2
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                               ww3)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                               s]>_N)
                            ww4
                            ww5
                            ww6
                            ww7
                            ww8
                            ww9,
                          case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                 @ s
                                 ds
                                 ds3
                                 ipv3 of ww20 { (#,,,,,,,,#) ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ->
                          case ww27 of wild2 { (,) pX pY ->
                          case pX of wild3 { GHC.Types.D# x ->
                          case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                 @ s
                                 ds
                                 ds3
                                 ipv5 of ww30 { (#,,,,,,,,#) ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ->
                          case ww36 of wild4 { (,) sX sY ->
                          case sX of wild5 { GHC.Types.D# x1 ->
                          case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                 @ s
                                 ds
                                 ds3
                                 ipv7 of ww40 { (#,,,,,,,,#) ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ->
                          case ww48 of wild6 { (,) sX1 sY1 ->
                          case sX1 of wild7 { GHC.Types.D# y ->
                          GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<##
                               (GHC.Prim.+## (GHC.Prim.-## x (GHC.Prim./## x1 2.0)) y)
                               0.0) } } } } } } } } }) #) } } }
                   GHC.Types.True
                   -> (# ipv,
                         (Graphics.UI.Fungen.Game.Game
                            @ t
                            @ s
                            @ u
                            @ v
                            ww
                            ww1
                            ww2
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                               ww3)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                               s]>_N)
                            ww4
                            ww5
                            ww6
                            ww7
                            ww8
                            ww9,
                          GHC.Types.False) #) } } } }) -}
43f7d7d9a270aaa996b54a14ac5bdf83
  $wa12 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 12,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,U(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 case w of wild { Graphics.UI.Fungen.Objects.GO ds ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                        @ s
                        ds
                        ds3
                        ipv1 of ww10 { (#,,,,,,,,#) ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                 case ww15 of wild1 {
                   GHC.Types.False
                   -> case ww
                             `cast`
                           (GHC.IORef.NTCo:IORef[0] <Graphics.UI.Fungen.Map.GameMap
                                                       v>_N) of wild2 { GHC.STRef.STRef var# ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ (Graphics.UI.Fungen.Map.GameMap v)
                             var#
                             ipv of ds10 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild3 {
                        DEFAULT
                        -> case GHC.Prim.readMutVar#
                                  @ GHC.Prim.RealWorld
                                  @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                  ww3
                                  ipv2 of ds11 { (#,#) ipv4 ipv5 ->
                           case GHC.Prim.readMutVar#
                                  @ GHC.Prim.RealWorld
                                  @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                  ww3
                                  ipv4 of ds12 { (#,#) ipv6 ipv7 ->
                           (# ipv6,
                              (Graphics.UI.Fungen.Game.Game
                                 @ t
                                 @ s
                                 @ u
                                 @ v
                                 wild2
                                   `cast`
                                 (Sym (GHC.IORef.NTCo:IORef[0]) <Graphics.UI.Fungen.Map.GameMap
                                                                   v>_N)
                                 ww1
                                 ww2
                                 (GHC.STRef.STRef
                                    @ GHC.Prim.RealWorld
                                    @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                    ww3)
                                   `cast`
                                 (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                                    s]>_N)
                                 ww4
                                 ww5
                                 ww6
                                 ww7
                                 ww8
                                 ww9,
                               case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                      @ s
                                      ds
                                      ds3
                                      ipv5 of ww20 { (#,,,,,,,,#) ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ->
                               case ww27 of wild4 { (,) pX pY ->
                               case pX of wild5 { GHC.Types.D# x ->
                               case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                      @ s
                                      ds
                                      ds3
                                      ipv7 of ww30 { (#,,,,,,,,#) ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ->
                               case ww36 of wild6 { (,) sX sY ->
                               case sX of wild7 { GHC.Types.D# x1 ->
                               case wild3 of wild8 {
                                 Graphics.UI.Fungen.Map.ColorMap ds13 s1
                                 -> case s1 of wild9 { (,) mX ds14 ->
                                    case mX of wild10 { GHC.Types.D# y ->
                                    GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.>## (GHC.Prim.+## x (GHC.Prim./## x1 2.0)) y) } }
                                 Graphics.UI.Fungen.Map.TextureMap ds13 ds14 ds15 ds16 s1
                                 -> case s1 of wild9 { (,) mX ds17 ->
                                    case mX of wild10 { GHC.Types.D# y ->
                                    GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.>## (GHC.Prim.+## x (GHC.Prim./## x1 2.0)) y) } }
                                 Graphics.UI.Fungen.Map.TileMap ds13 ds14 ds15 ds16 s1
                                 -> case s1 of wild9 { (,) mX ds17 ->
                                    case mX of wild10 { GHC.Types.D# y ->
                                    GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.>##
                                         (GHC.Prim.+## x (GHC.Prim./## x1 2.0))
                                         y) } } } } } } } } }) #) } }
                        Graphics.UI.Fungen.Map.MultiMap ds11 ds12
                        -> case GHC.Prim.readMutVar#
                                  @ GHC.Prim.RealWorld
                                  @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                  ww3
                                  ipv2 of ds13 { (#,#) ipv4 ipv5 ->
                           case GHC.Prim.readMutVar#
                                  @ GHC.Prim.RealWorld
                                  @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                  ww3
                                  ipv4 of ds14 { (#,#) ipv6 ipv7 ->
                           (# ipv6,
                              (Graphics.UI.Fungen.Game.Game
                                 @ t
                                 @ s
                                 @ u
                                 @ v
                                 wild2
                                   `cast`
                                 (Sym (GHC.IORef.NTCo:IORef[0]) <Graphics.UI.Fungen.Map.GameMap
                                                                   v>_N)
                                 ww1
                                 ww2
                                 (GHC.STRef.STRef
                                    @ GHC.Prim.RealWorld
                                    @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                    ww3)
                                   `cast`
                                 (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                                    s]>_N)
                                 ww4
                                 ww5
                                 ww6
                                 ww7
                                 ww8
                                 ww9,
                               case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                      @ s
                                      ds
                                      ds3
                                      ipv5 of ww20 { (#,,,,,,,,#) ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ->
                               case ww27 of wild4 { (,) pX pY ->
                               case pX of wild5 { GHC.Types.D# x ->
                               case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                      @ s
                                      ds
                                      ds3
                                      ipv7 of ww30 { (#,,,,,,,,#) ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ->
                               case ww36 of wild6 { (,) sX sY ->
                               case sX of wild7 { GHC.Types.D# x1 ->
                               case ds12 of ww40 { GHC.Types.I# ww41 ->
                               case GHC.List.$w!!
                                      @ (Graphics.UI.Fungen.Map.GameMap v)
                                      ds11
                                      ww41 of wild8 {
                                 Graphics.UI.Fungen.Map.ColorMap ds15 s1
                                 -> case s1 of wild9 { (,) mX ds16 ->
                                    case mX of wild10 { GHC.Types.D# y ->
                                    GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.>## (GHC.Prim.+## x (GHC.Prim./## x1 2.0)) y) } }
                                 Graphics.UI.Fungen.Map.TextureMap ds15 ds16 ds17 ds18 s1
                                 -> case s1 of wild9 { (,) mX ds19 ->
                                    case mX of wild10 { GHC.Types.D# y ->
                                    GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.>## (GHC.Prim.+## x (GHC.Prim./## x1 2.0)) y) } }
                                 Graphics.UI.Fungen.Map.TileMap ds15 ds16 ds17 ds18 s1
                                 -> case s1 of wild9 { (,) mX ds19 ->
                                    case mX of wild10 { GHC.Types.D# y ->
                                    GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.>## (GHC.Prim.+## x (GHC.Prim./## x1 2.0)) y) } }
                                 Graphics.UI.Fungen.Map.MultiMap ds15 ds16
                                 -> case Graphics.UI.Fungen.Map.getMapSize1
                                    ret_ty GHC.Types.Bool
                                    of {} } } } } } } } }) #) } } } } }
                   GHC.Types.True
                   -> (# ipv,
                         (Graphics.UI.Fungen.Game.Game
                            @ t
                            @ s
                            @ u
                            @ v
                            ww
                            ww1
                            ww2
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                               ww3)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                               s]>_N)
                            ww4
                            ww5
                            ww6
                            ww7
                            ww8
                            ww9,
                          GHC.Types.False) #) } } } }) -}
274bc52dbfaf1063d288a86e158a93dd
  $wa13 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 12,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,U(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
f19611051278c00dbe8c984d7d3438f7
  $wa14 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 12,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,U(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 case w of wild { Graphics.UI.Fungen.Objects.GO ds ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                        @ s
                        ds
                        ds3
                        ipv1 of ww10 { (#,,,,,,,,#) ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                 case ww15 of wild1 {
                   GHC.Types.False
                   -> case ww
                             `cast`
                           (GHC.IORef.NTCo:IORef[0] <Graphics.UI.Fungen.Map.GameMap
                                                       v>_N) of wild2 { GHC.STRef.STRef var# ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ (Graphics.UI.Fungen.Map.GameMap v)
                             var#
                             ipv of ds10 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild3 {
                        DEFAULT
                        -> case GHC.Prim.readMutVar#
                                  @ GHC.Prim.RealWorld
                                  @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                  ww3
                                  ipv2 of ds11 { (#,#) ipv4 ipv5 ->
                           case GHC.Prim.readMutVar#
                                  @ GHC.Prim.RealWorld
                                  @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                  ww3
                                  ipv4 of ds12 { (#,#) ipv6 ipv7 ->
                           (# ipv6,
                              (Graphics.UI.Fungen.Game.Game
                                 @ t
                                 @ s
                                 @ u
                                 @ v
                                 wild2
                                   `cast`
                                 (Sym (GHC.IORef.NTCo:IORef[0]) <Graphics.UI.Fungen.Map.GameMap
                                                                   v>_N)
                                 ww1
                                 ww2
                                 (GHC.STRef.STRef
                                    @ GHC.Prim.RealWorld
                                    @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                    ww3)
                                   `cast`
                                 (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                                    s]>_N)
                                 ww4
                                 ww5
                                 ww6
                                 ww7
                                 ww8
                                 ww9,
                               case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                      @ s
                                      ds
                                      ds3
                                      ipv5 of ww20 { (#,,,,,,,,#) ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ->
                               case ww27 of wild4 { (,) pX pY ->
                               case pY of wild5 { GHC.Types.D# x ->
                               case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                      @ s
                                      ds
                                      ds3
                                      ipv7 of ww30 { (#,,,,,,,,#) ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ->
                               case ww36 of wild6 { (,) sX sY ->
                               case sY of wild7 { GHC.Types.D# x1 ->
                               case wild3 of wild8 {
                                 Graphics.UI.Fungen.Map.ColorMap ds13 s1
                                 -> case s1 of wild9 { (,) ds14 mY ->
                                    case mY of wild10 { GHC.Types.D# y ->
                                    GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.>## (GHC.Prim.+## x (GHC.Prim./## x1 2.0)) y) } }
                                 Graphics.UI.Fungen.Map.TextureMap ds13 ds14 ds15 ds16 s1
                                 -> case s1 of wild9 { (,) ds17 mY ->
                                    case mY of wild10 { GHC.Types.D# y ->
                                    GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.>## (GHC.Prim.+## x (GHC.Prim./## x1 2.0)) y) } }
                                 Graphics.UI.Fungen.Map.TileMap ds13 ds14 ds15 ds16 s1
                                 -> case s1 of wild9 { (,) ds17 mY ->
                                    case mY of wild10 { GHC.Types.D# y ->
                                    GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.>##
                                         (GHC.Prim.+## x (GHC.Prim./## x1 2.0))
                                         y) } } } } } } } } }) #) } }
                        Graphics.UI.Fungen.Map.MultiMap ds11 ds12
                        -> case GHC.Prim.readMutVar#
                                  @ GHC.Prim.RealWorld
                                  @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                  ww3
                                  ipv2 of ds13 { (#,#) ipv4 ipv5 ->
                           case GHC.Prim.readMutVar#
                                  @ GHC.Prim.RealWorld
                                  @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                  ww3
                                  ipv4 of ds14 { (#,#) ipv6 ipv7 ->
                           (# ipv6,
                              (Graphics.UI.Fungen.Game.Game
                                 @ t
                                 @ s
                                 @ u
                                 @ v
                                 wild2
                                   `cast`
                                 (Sym (GHC.IORef.NTCo:IORef[0]) <Graphics.UI.Fungen.Map.GameMap
                                                                   v>_N)
                                 ww1
                                 ww2
                                 (GHC.STRef.STRef
                                    @ GHC.Prim.RealWorld
                                    @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                    ww3)
                                   `cast`
                                 (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                                    s]>_N)
                                 ww4
                                 ww5
                                 ww6
                                 ww7
                                 ww8
                                 ww9,
                               case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                      @ s
                                      ds
                                      ds3
                                      ipv5 of ww20 { (#,,,,,,,,#) ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ->
                               case ww27 of wild4 { (,) pX pY ->
                               case pY of wild5 { GHC.Types.D# x ->
                               case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                      @ s
                                      ds
                                      ds3
                                      ipv7 of ww30 { (#,,,,,,,,#) ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ->
                               case ww36 of wild6 { (,) sX sY ->
                               case sY of wild7 { GHC.Types.D# x1 ->
                               case ds12 of ww40 { GHC.Types.I# ww41 ->
                               case GHC.List.$w!!
                                      @ (Graphics.UI.Fungen.Map.GameMap v)
                                      ds11
                                      ww41 of wild8 {
                                 Graphics.UI.Fungen.Map.ColorMap ds15 s1
                                 -> case s1 of wild9 { (,) ds16 mY ->
                                    case mY of wild10 { GHC.Types.D# y ->
                                    GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.>## (GHC.Prim.+## x (GHC.Prim./## x1 2.0)) y) } }
                                 Graphics.UI.Fungen.Map.TextureMap ds15 ds16 ds17 ds18 s1
                                 -> case s1 of wild9 { (,) ds19 mY ->
                                    case mY of wild10 { GHC.Types.D# y ->
                                    GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.>## (GHC.Prim.+## x (GHC.Prim./## x1 2.0)) y) } }
                                 Graphics.UI.Fungen.Map.TileMap ds15 ds16 ds17 ds18 s1
                                 -> case s1 of wild9 { (,) ds19 mY ->
                                    case mY of wild10 { GHC.Types.D# y ->
                                    GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.>## (GHC.Prim.+## x (GHC.Prim./## x1 2.0)) y) } }
                                 Graphics.UI.Fungen.Map.MultiMap ds15 ds16
                                 -> case Graphics.UI.Fungen.Map.getMapSize1
                                    ret_ty GHC.Types.Bool
                                    of {} } } } } } } } }) #) } } } } }
                   GHC.Types.True
                   -> (# ipv,
                         (Graphics.UI.Fungen.Game.Game
                            @ t
                            @ s
                            @ u
                            @ v
                            ww
                            ww1
                            ww2
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                               ww3)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                               s]>_N)
                            ww4
                            ww5
                            ww6
                            ww7
                            ww8
                            ww9,
                          GHC.Types.False) #) } } } }) -}
15aac4f00a4f560f09f3b93751c7f21a
  $wa15 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 12,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,U(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
a69e4abec94fe9d5f8f87c0b4e07a200
  $wa16 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 13,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,1*U(U,A,U,A,A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Objects.GameObject s
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case w of wild { Graphics.UI.Fungen.Objects.GO ds ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                        @ s
                        ds
                        ds4
                        ipv1 of ww10 { (#,,,,,,,,#) ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                 case ww15 of wild1 {
                   GHC.Types.False
                   -> case w1 of wild2 { Graphics.UI.Fungen.Objects.GO ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ->
                      case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                             @ s
                             ds11
                             ds13
                             ipv3 of ww20 { (#,,,,,,,,#) ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ->
                      case ww25 of wild3 {
                        GHC.Types.False
                        -> case GHC.Prim.readMutVar#
                                  @ GHC.Prim.RealWorld
                                  @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                  ww3
                                  ipv2 of ds20 { (#,#) ipv4 ipv5 ->
                           case GHC.Prim.readMutVar#
                                  @ GHC.Prim.RealWorld
                                  @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                  ww3
                                  ipv4 of ds21 { (#,#) ipv6 ipv7 ->
                           case GHC.Prim.readMutVar#
                                  @ GHC.Prim.RealWorld
                                  @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                  ww3
                                  ipv6 of ds22 { (#,#) ipv8 ipv9 ->
                           case GHC.Prim.readMutVar#
                                  @ GHC.Prim.RealWorld
                                  @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                  ww3
                                  ipv8 of ds23 { (#,#) ipv10 ipv11 ->
                           (# ipv10,
                              (Graphics.UI.Fungen.Game.Game
                                 @ t
                                 @ s
                                 @ u
                                 @ v
                                 ww
                                 ww1
                                 ww2
                                 (GHC.STRef.STRef
                                    @ GHC.Prim.RealWorld
                                    @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                    ww3)
                                   `cast`
                                 (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                                    s]>_N)
                                 ww4
                                 ww5
                                 ww6
                                 ww7
                                 ww8
                                 ww9,
                               case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                      @ s
                                      ds11
                                      ds13
                                      ipv7 of ww30 { (#,,,,,,,,#) ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ->
                               case ww37 of wild4 { (,) pX pY ->
                               case pX of wild5 { GHC.Types.D# x ->
                               case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                      @ s
                                      ds11
                                      ds13
                                      ipv11 of ww40 { (#,,,,,,,,#) ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ->
                               case ww46 of wild6 { (,) sX sY ->
                               case sX of wild7 { GHC.Types.D# x1 ->
                               case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                      @ s
                                      ds
                                      ds4
                                      ipv5 of ww50 { (#,,,,,,,,#) ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ->
                               case ww57 of wild8 { (,) pX1 pY1 ->
                               case pX1 of wild9 { GHC.Types.D# x2 ->
                               case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                      @ s
                                      ds
                                      ds4
                                      ipv9 of ww60 { (#,,,,,,,,#) ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ww69 ->
                               case ww66 of wild10 { (,) sX1 sY1 ->
                               case sX1 of wild11 { GHC.Types.D# x3 ->
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<##
                                         (GHC.Prim.-## x (GHC.Prim./## x1 2.0))
                                         (GHC.Prim.+## x2 (GHC.Prim./## x3 2.0))) of wild12 {
                                 GHC.Types.False -> GHC.Types.False
                                 GHC.Types.True
                                 -> case GHC.Prim.tagToEnum#
                                           @ GHC.Types.Bool
                                           (GHC.Prim.<##
                                              (GHC.Prim.-## x2 (GHC.Prim./## x3 2.0))
                                              (GHC.Prim.+## x (GHC.Prim./## x1 2.0))) of wild13 {
                                      GHC.Types.False -> GHC.Types.False
                                      GHC.Types.True
                                      -> case pY of wild14 { GHC.Types.D# x4 ->
                                         case sY of wild15 { GHC.Types.D# x5 ->
                                         case pY1 of wild16 { GHC.Types.D# x6 ->
                                         case sY1 of wild17 { GHC.Types.D# x7 ->
                                         case GHC.Prim.tagToEnum#
                                                @ GHC.Types.Bool
                                                (GHC.Prim.<##
                                                   (GHC.Prim.-## x4 (GHC.Prim./## x5 2.0))
                                                   (GHC.Prim.+##
                                                      x6
                                                      (GHC.Prim./## x7 2.0))) of wild18 {
                                           GHC.Types.False -> GHC.Types.False
                                           GHC.Types.True
                                           -> GHC.Prim.tagToEnum#
                                                @ GHC.Types.Bool
                                                (GHC.Prim.<##
                                                   (GHC.Prim.-## x6 (GHC.Prim./## x7 2.0))
                                                   (GHC.Prim.+##
                                                      x4
                                                      (GHC.Prim./##
                                                         x5
                                                         2.0))) } } } } } } } } } } } } } } } } } } }) #) } } } }
                        GHC.Types.True
                        -> (# ipv2,
                              (Graphics.UI.Fungen.Game.Game
                                 @ t
                                 @ s
                                 @ u
                                 @ v
                                 ww
                                 ww1
                                 ww2
                                 (GHC.STRef.STRef
                                    @ GHC.Prim.RealWorld
                                    @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                    ww3)
                                   `cast`
                                 (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                                    s]>_N)
                                 ww4
                                 ww5
                                 ww6
                                 ww7
                                 ww8
                                 ww9,
                               GHC.Types.False) #) } } }
                   GHC.Types.True
                   -> (# ipv2,
                         (Graphics.UI.Fungen.Game.Game
                            @ t
                            @ s
                            @ u
                            @ v
                            ww
                            ww1
                            ww2
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                               ww3)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                               s]>_N)
                            ww4
                            ww5
                            ww6
                            ww7
                            ww8
                            ww9,
                          GHC.Types.False) #) } } } } }) -}
ca71f89c97e8f5b5dfeee79d9e78c99d
  $wa17 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 13,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,1*U(U,A,U,A,A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Objects.GameObject s
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case w of wild { Graphics.UI.Fungen.Objects.GO ds ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                        @ s
                        ds
                        ds4
                        ipv1 of ww10 { (#,,,,,,,,#) ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                 case ww15 of wild1 {
                   GHC.Types.False
                   -> case w1 of wild2 { Graphics.UI.Fungen.Objects.GO ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ->
                      case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                             @ s
                             ds11
                             ds13
                             ipv3 of ww20 { (#,,,,,,,,#) ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ->
                      case ww25 of wild3 {
                        GHC.Types.False
                        -> case GHC.Prim.readMutVar#
                                  @ GHC.Prim.RealWorld
                                  @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                  ww3
                                  ipv2 of ds20 { (#,#) ipv4 ipv5 ->
                           case GHC.Prim.readMutVar#
                                  @ GHC.Prim.RealWorld
                                  @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                  ww3
                                  ipv4 of ds21 { (#,#) ipv6 ipv7 ->
                           case GHC.Prim.readMutVar#
                                  @ GHC.Prim.RealWorld
                                  @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                  ww3
                                  ipv6 of ds22 { (#,#) ipv8 ipv9 ->
                           case GHC.Prim.readMutVar#
                                  @ GHC.Prim.RealWorld
                                  @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                  ww3
                                  ipv8 of ds23 { (#,#) ipv10 ipv11 ->
                           case GHC.Prim.readMutVar#
                                  @ GHC.Prim.RealWorld
                                  @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                  ww3
                                  ipv10 of ds24 { (#,#) ipv12 ipv13 ->
                           case GHC.Prim.readMutVar#
                                  @ GHC.Prim.RealWorld
                                  @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                  ww3
                                  ipv12 of ds25 { (#,#) ipv14 ipv15 ->
                           (# ipv14,
                              (Graphics.UI.Fungen.Game.Game
                                 @ t
                                 @ s
                                 @ u
                                 @ v
                                 ww
                                 ww1
                                 ww2
                                 (GHC.STRef.STRef
                                    @ GHC.Prim.RealWorld
                                    @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                    ww3)
                                   `cast`
                                 (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                                    s]>_N)
                                 ww4
                                 ww5
                                 ww6
                                 ww7
                                 ww8
                                 ww9,
                               case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                      @ s
                                      ds11
                                      ds13
                                      ipv7 of ww30 { (#,,,,,,,,#) ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ->
                               case ww37 of wild4 { (,) pX pY ->
                               case pX of wild5 { GHC.Types.D# x ->
                               case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                      @ s
                                      ds11
                                      ds13
                                      ipv15 of ww40 { (#,,,,,,,,#) ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ->
                               case ww46 of wild6 { (,) sX sY ->
                               case sX of wild7 { GHC.Types.D# x1 ->
                               case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                      @ s
                                      ds11
                                      ds13
                                      ipv11 of ww50 { (#,,,,,,,,#) ww51 ww52 ww53 ww54 ww55 ww56 ww57 ww58 ww59 ->
                               case ww58 of wild8 { (,) sX1 sY1 ->
                               case sX1 of wild9 { GHC.Types.D# y ->
                               case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                      @ s
                                      ds
                                      ds4
                                      ipv5 of ww60 { (#,,,,,,,,#) ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ww69 ->
                               case ww67 of wild10 { (,) pX1 pY1 ->
                               case pX1 of wild11 { GHC.Types.D# x2 ->
                               case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                      @ s
                                      ds
                                      ds4
                                      ipv13 of ww70 { (#,,,,,,,,#) ww71 ww72 ww73 ww74 ww75 ww76 ww77 ww78 ww79 ->
                               case ww76 of wild12 { (,) sX2 sY2 ->
                               case sX2 of wild13 { GHC.Types.D# x3 ->
                               case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                      @ s
                                      ds
                                      ds4
                                      ipv9 of ww80 { (#,,,,,,,,#) ww81 ww82 ww83 ww84 ww85 ww86 ww87 ww88 ww89 ->
                               case ww88 of wild14 { (,) sX3 sY3 ->
                               case sX3 of wild15 { GHC.Types.D# y1 ->
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<##
                                         (GHC.Prim.+## (GHC.Prim.-## x (GHC.Prim./## x1 2.0)) y)
                                         (GHC.Prim.+##
                                            (GHC.Prim.+## x2 (GHC.Prim./## x3 2.0))
                                            y1)) of wild16 {
                                 GHC.Types.False -> GHC.Types.False
                                 GHC.Types.True
                                 -> case GHC.Prim.tagToEnum#
                                           @ GHC.Types.Bool
                                           (GHC.Prim.<##
                                              (GHC.Prim.+##
                                                 (GHC.Prim.-## x2 (GHC.Prim./## x3 2.0))
                                                 y1)
                                              (GHC.Prim.+##
                                                 (GHC.Prim.+## x (GHC.Prim./## x1 2.0))
                                                 y)) of wild17 {
                                      GHC.Types.False -> GHC.Types.False
                                      GHC.Types.True
                                      -> case pY of wild18 { GHC.Types.D# x4 ->
                                         case sY of wild19 { GHC.Types.D# x5 ->
                                         case sY1 of wild20 { GHC.Types.D# y2 ->
                                         case pY1 of wild21 { GHC.Types.D# x6 ->
                                         case sY2 of wild22 { GHC.Types.D# x7 ->
                                         case sY3 of wild23 { GHC.Types.D# y3 ->
                                         case GHC.Prim.tagToEnum#
                                                @ GHC.Types.Bool
                                                (GHC.Prim.<##
                                                   (GHC.Prim.+##
                                                      (GHC.Prim.-## x4 (GHC.Prim./## x5 2.0))
                                                      y2)
                                                   (GHC.Prim.+##
                                                      (GHC.Prim.+## x6 (GHC.Prim./## x7 2.0))
                                                      y3)) of wild24 {
                                           GHC.Types.False -> GHC.Types.False
                                           GHC.Types.True
                                           -> GHC.Prim.tagToEnum#
                                                @ GHC.Types.Bool
                                                (GHC.Prim.<##
                                                   (GHC.Prim.+##
                                                      (GHC.Prim.-## x6 (GHC.Prim./## x7 2.0))
                                                      y3)
                                                   (GHC.Prim.+##
                                                      (GHC.Prim.+## x4 (GHC.Prim./## x5 2.0))
                                                      y2)) } } } } } } } } } } } } } } } } } } } } } } } } } } }) #) } } } } } }
                        GHC.Types.True
                        -> (# ipv2,
                              (Graphics.UI.Fungen.Game.Game
                                 @ t
                                 @ s
                                 @ u
                                 @ v
                                 ww
                                 ww1
                                 ww2
                                 (GHC.STRef.STRef
                                    @ GHC.Prim.RealWorld
                                    @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                                    ww3)
                                   `cast`
                                 (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                                    s]>_N)
                                 ww4
                                 ww5
                                 ww6
                                 ww7
                                 ww8
                                 ww9,
                               GHC.Types.False) #) } } }
                   GHC.Types.True
                   -> (# ipv2,
                         (Graphics.UI.Fungen.Game.Game
                            @ t
                            @ s
                            @ u
                            @ v
                            ww
                            ww1
                            ww2
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                               ww3)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                               s]>_N)
                            ww4
                            ww5
                            ww6
                            ww7
                            ww8
                            ww9,
                          GHC.Types.False) #) } } } } }) -}
5c4b4ca9d95e62ce0ca679af08c50eb5
  $wa18 ::
    Graphics.GL.Types.GLdouble
    -> Graphics.GL.Types.GLdouble
    -> Graphics.GL.Types.GLdouble
    -> Graphics.GL.Types.GLdouble
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 16,
     Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U,A,U,A,A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.GL.Types.GLdouble
                   w1 :: Graphics.GL.Types.GLdouble
                   w2 :: Graphics.GL.Types.GLdouble
                   w3 :: Graphics.GL.Types.GLdouble
                   w4 :: Graphics.UI.Fungen.Objects.GameObject s
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w5 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        w5 of ds1 { (#,#) ipv ipv1 ->
                 case w4 of wild { Graphics.UI.Fungen.Objects.GO ds ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                        @ s
                        ds
                        ds3
                        ipv1 of ww10 { (#,,,,,,,,#) ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                 case ww15 of wild1 {
                   GHC.Types.False
                   -> case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                             ww3
                             ipv of ds10 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                             ww3
                             ipv2 of ds11 { (#,#) ipv4 ipv5 ->
                      (# ipv4,
                         (Graphics.UI.Fungen.Game.Game
                            @ t
                            @ s
                            @ u
                            @ v
                            ww
                            ww1
                            ww2
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                               ww3)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                               s]>_N)
                            ww4
                            ww5
                            ww6
                            ww7
                            ww8
                            ww9,
                          case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                 @ s
                                 ds
                                 ds3
                                 ipv3 of ww20 { (#,,,,,,,,#) ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ->
                          case ww27 of wild2 { (,) pX pY ->
                          case pX of wild3 { GHC.Types.D# x ->
                          case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                 @ s
                                 ds
                                 ds3
                                 ipv5 of ww30 { (#,,,,,,,,#) ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ->
                          case ww36 of wild4 { (,) sX sY ->
                          case sX of wild5 { GHC.Types.D# x1 ->
                          case w of wild6 { GHC.Types.D# x2 ->
                          case w2 of wild7 { GHC.Types.D# x3 ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<##
                                    (GHC.Prim.-## x (GHC.Prim./## x1 2.0))
                                    (GHC.Prim.+## x2 (GHC.Prim./## x3 2.0))) of wild8 {
                            GHC.Types.False -> GHC.Types.False
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<##
                                         (GHC.Prim.-## x2 (GHC.Prim./## x3 2.0))
                                         (GHC.Prim.+## x (GHC.Prim./## x1 2.0))) of wild9 {
                                 GHC.Types.False -> GHC.Types.False
                                 GHC.Types.True
                                 -> case pY of wild10 { GHC.Types.D# x4 ->
                                    case sY of wild11 { GHC.Types.D# x5 ->
                                    case w1 of wild12 { GHC.Types.D# x6 ->
                                    case w3 of wild13 { GHC.Types.D# x7 ->
                                    case GHC.Prim.tagToEnum#
                                           @ GHC.Types.Bool
                                           (GHC.Prim.<##
                                              (GHC.Prim.-## x4 (GHC.Prim./## x5 2.0))
                                              (GHC.Prim.+## x6 (GHC.Prim./## x7 2.0))) of wild14 {
                                      GHC.Types.False -> GHC.Types.False
                                      GHC.Types.True
                                      -> GHC.Prim.tagToEnum#
                                           @ GHC.Types.Bool
                                           (GHC.Prim.<##
                                              (GHC.Prim.-## x6 (GHC.Prim./## x7 2.0))
                                              (GHC.Prim.+##
                                                 x4
                                                 (GHC.Prim./##
                                                    x5
                                                    2.0))) } } } } } } } } } } } } } } }) #) } }
                   GHC.Types.True
                   -> (# ipv,
                         (Graphics.UI.Fungen.Game.Game
                            @ t
                            @ s
                            @ u
                            @ v
                            ww
                            ww1
                            ww2
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                               ww3)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                               s]>_N)
                            ww4
                            ww5
                            ww6
                            ww7
                            ww8
                            ww9,
                          GHC.Types.False) #) } } } }) -}
86a377cb23cf86feb220a66050eb3d9d
  $wa19 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> (Graphics.UI.Fungen.Objects.GameObject s
        -> Graphics.UI.Fungen.Objects.GameObject s)
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 13,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,1*C1(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Objects.GameObject s
                         -> Graphics.UI.Fungen.Objects.GameObject s
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        (case w of wild { Graphics.UI.Fungen.Objects.GO ds ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                         case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                @ s
                                ds
                                ds4
                                ipv1 of ww10 { (#,,,,,,,,#) ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                         Graphics.UI.Fungen.Objects.updateObject @ s w1 ds ww13 ipv3 } })
                        ipv2 of s2# { DEFAULT ->
                 (# s2#,
                    (Graphics.UI.Fungen.Game.Game
                       @ t
                       @ s
                       @ u
                       @ v
                       ww
                       ww1
                       ww2
                       (GHC.STRef.STRef
                          @ GHC.Prim.RealWorld
                          @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                          ww3)
                         `cast`
                       (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                          s]>_N)
                       ww4
                       ww5
                       ww6
                       ww7
                       ww8
                       ww9,
                     GHC.Tuple.()) #) } } }) -}
a7abacda710af5b4f2c0fda0b58a1909
  $wa2 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 12,
     Strictness: <L,1*U(A,A,A,1*U,A,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)),A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.IORef.IORef [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                        ww8
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 case w of ww10 { Graphics.UI.Fungen.Objects.GO ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                 case ww17 of ww20 { (,) ww21 ww22 ->
                 case ww21 of ww23 { GHC.Types.D# ww24 ->
                 case ww22 of ww25 { GHC.Types.D# ww26 ->
                 case Graphics.UI.Fungen.Objects.$wa
                        @ s
                        ww14
                        ww16
                        ww24
                        ww26
                        ipv1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    (Graphics.UI.Fungen.Game.Game
                       @ t
                       @ s
                       @ u
                       @ v
                       ww
                       ww1
                       ww2
                       ww3
                       ww4
                       ww5
                       ww6
                       ww7
                       (GHC.STRef.STRef
                          @ GHC.Prim.RealWorld
                          @ [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                          ww8)
                         `cast`
                       (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]>_N)
                       ww9,
                     ipv3) #) } } } } } }) -}
8b46e77ec76e016cfe9583c203ee98f5
  $wa20 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 12,
     Strictness: <L,U(U,A,U,A,A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        (case w of wild { Graphics.UI.Fungen.Objects.GO ds ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                         case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                @ s
                                ds
                                ds5
                                ipv3 of ww10 { (#,,,,,,,,#) ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                         case Graphics.UI.Fungen.Objects.$wupdateObject
                                @ s
                                (\ o :: Graphics.UI.Fungen.Objects.GameObject s[OneShot] ->
                                 case o of wild1 { Graphics.UI.Fungen.Objects.GO ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ->
                                 let {
                                   ds21 :: (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
                                   = case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                            @ s
                                            ds
                                            ds5
                                            ipv1 of ww20 { (#,,,,,,,,#) ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ->
                                     ww28 }
                                 } in
                                 Graphics.UI.Fungen.Objects.GO
                                   @ s
                                   ds12
                                   ds13
                                   ds14
                                   ds15
                                   ds16
                                   ds17
                                   ds18
                                   (case ds21 of wild2 { (,) sX sY ->
                                    case sX of wild3 { GHC.Types.D# x ->
                                    GHC.Types.D# (GHC.Prim.negateDouble# x) } },
                                    case ds21 of wild2 { (,) sX sY -> sY })
                                   ds20 })
                                ds
                                ww13
                                ipv5 of ww20 { (#,#) ww21 ww22 ->
                         GHC.Types.:
                           @ (Graphics.UI.Fungen.Objects.ObjectManager s)
                           ww21
                           ww22 } } })
                        ipv4 of s2# { DEFAULT ->
                 (# s2#,
                    (Graphics.UI.Fungen.Game.Game
                       @ t
                       @ s
                       @ u
                       @ v
                       ww
                       ww1
                       ww2
                       (GHC.STRef.STRef
                          @ GHC.Prim.RealWorld
                          @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                          ww3)
                         `cast`
                       (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                          s]>_N)
                       ww4
                       ww5
                       ww6
                       ww7
                       ww8
                       ww9,
                     GHC.Tuple.()) #) } } } }) -}
d6fd0c5df7ba70bd8347f4b43eb3b55b
  $wa21 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 12,
     Strictness: <L,U(U,A,U,A,A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        (case w of wild { Graphics.UI.Fungen.Objects.GO ds ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                         case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                @ s
                                ds
                                ds5
                                ipv3 of ww10 { (#,,,,,,,,#) ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                         case Graphics.UI.Fungen.Objects.$wupdateObject
                                @ s
                                (\ o :: Graphics.UI.Fungen.Objects.GameObject s[OneShot] ->
                                 case o of wild1 { Graphics.UI.Fungen.Objects.GO ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ->
                                 let {
                                   ds21 :: (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
                                   = case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                            @ s
                                            ds
                                            ds5
                                            ipv1 of ww20 { (#,,,,,,,,#) ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ->
                                     ww28 }
                                 } in
                                 Graphics.UI.Fungen.Objects.GO
                                   @ s
                                   ds12
                                   ds13
                                   ds14
                                   ds15
                                   ds16
                                   ds17
                                   ds18
                                   (case ds21 of wild2 { (,) sX sY -> sX },
                                    case ds21 of wild2 { (,) sX sY ->
                                    case sY of wild3 { GHC.Types.D# x ->
                                    GHC.Types.D# (GHC.Prim.negateDouble# x) } })
                                   ds20 })
                                ds
                                ww13
                                ipv5 of ww20 { (#,#) ww21 ww22 ->
                         GHC.Types.:
                           @ (Graphics.UI.Fungen.Objects.ObjectManager s)
                           ww21
                           ww22 } } })
                        ipv4 of s2# { DEFAULT ->
                 (# s2#,
                    (Graphics.UI.Fungen.Game.Game
                       @ t
                       @ s
                       @ u
                       @ v
                       ww
                       ww1
                       ww2
                       (GHC.STRef.STRef
                          @ GHC.Prim.RealWorld
                          @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                          ww3)
                         `cast`
                       (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                          s]>_N)
                       ww4
                       ww5
                       ww6
                       ww7
                       ww8
                       ww9,
                     GHC.Tuple.()) #) } } } }) -}
917775183152400a308ab244ffd1a702
  $wa22 ::
    GHC.Types.Int
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 12,
     Strictness: <L,1*U(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ t
                   @ s
                   @ u
                   @ v
                   w :: GHC.Types.Int
                   ww :: GHC.Prim.MutVar#
                           GHC.Prim.RealWorld (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.IORef.IORef [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Graphics.UI.Fungen.Map.GameMap v)
                        ww
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   DEFAULT
                   -> case Graphics.UI.Fungen.Game.setCurrentMapIndex2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
                      of {}
                   Graphics.UI.Fungen.Map.MultiMap ds2 ds3
                   -> case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld
                             @ (Graphics.UI.Fungen.Map.GameMap v)
                             ww
                             (case w of ww10 { GHC.Types.I# ww11 ->
                              case GHC.List.$wlenAcc
                                     @ (Graphics.UI.Fungen.Map.GameMap v)
                                     ds2
                                     0 of ww12 { DEFAULT ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww11 ww12) of wild1 {
                                GHC.Types.False -> Graphics.UI.Fungen.Map.MultiMap @ v ds2 ww10
                                GHC.Types.True
                                -> case Graphics.UI.Fungen.Map.updateCurrentIndex1
                                   ret_ty (Graphics.UI.Fungen.Map.GameMap v)
                                   of {} } } })
                             ipv of s2# { DEFAULT ->
                      (# s2#,
                         (Graphics.UI.Fungen.Game.Game
                            @ t
                            @ s
                            @ u
                            @ v
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ (Graphics.UI.Fungen.Map.GameMap v)
                               ww)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <Graphics.UI.Fungen.Map.GameMap
                                                              v>_N)
                            ww1
                            ww2
                            ww3
                            ww4
                            ww5
                            ww6
                            ww7
                            ww8
                            ww9,
                          GHC.Tuple.()) #) } } }) -}
623d5ba95f0a4947ef4c249d3d21e5a2
  $wa23 ::
    GHC.Types.Int
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 13,
     Strictness: <L,1*U(U)><L,1*U(U,A,U,A,A,A,A,A,A)><L,U><L,U><L,U><L,U(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: GHC.Types.Int
                   w1 :: Graphics.UI.Fungen.Objects.GameObject s
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.IORef.IORef [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                        ww8
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case ww3
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of ww10 { GHC.STRef.STRef ww11 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww11
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww11
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww11
                        (case w1 of wild { Graphics.UI.Fungen.Objects.GO ds ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                         case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                @ s
                                ds
                                ds5
                                ipv3 of ww12 { (#,,,,,,,,#) ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ->
                         case Graphics.UI.Fungen.Objects.$wupdateObject
                                @ s
                                (\ w3 :: Graphics.UI.Fungen.Objects.GameObject s[OneShot] ->
                                 case w of ww22 { GHC.Types.I# ww23 ->
                                 case GHC.List.$wlenAcc
                                        @ Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject
                                        ipv1
                                        0 of ww24 { DEFAULT ->
                                 case w3 of ww25 { Graphics.UI.Fungen.Objects.GO ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ->
                                 case ww29 of wild1 {
                                   Graphics.UI.Fungen.Objects.Tx ds12
                                   -> case GHC.Prim.tagToEnum#
                                             @ GHC.Types.Bool
                                             (GHC.Prim.<=# ww23 (GHC.Prim.-# ww24 1)) of wild2 {
                                        GHC.Types.False
                                        -> Graphics.UI.Fungen.Objects.updateObjectPicture2
                                             @ s
                                             ww27
                                             ww28
                                        GHC.Types.True
                                        -> Graphics.UI.Fungen.Objects.GO
                                             @ s
                                             ww26
                                             ww27
                                             ww28
                                             (Graphics.UI.Fungen.Objects.Tx ww22)
                                             ww30
                                             ww31
                                             ww32
                                             ww33
                                             ww34 }
                                   Graphics.UI.Fungen.Objects.B ipv6
                                   -> Graphics.UI.Fungen.Objects.updateObjectPicture1
                                        @ s
                                        ww27
                                        ww28 } } } })
                                ds
                                ww15
                                ipv5 of ww22 { (#,#) ww23 ww24 ->
                         GHC.Types.:
                           @ (Graphics.UI.Fungen.Objects.ObjectManager s)
                           ww23
                           ww24 } } })
                        ipv4 of s2# { DEFAULT ->
                 (# s2#,
                    (Graphics.UI.Fungen.Game.Game
                       @ t
                       @ s
                       @ u
                       @ v
                       ww
                       ww1
                       ww2
                       (GHC.STRef.STRef
                          @ GHC.Prim.RealWorld
                          @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                          ww11)
                         `cast`
                       (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                          s]>_N)
                       ww4
                       ww5
                       ww6
                       ww7
                       (GHC.STRef.STRef
                          @ GHC.Prim.RealWorld
                          @ [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                          ww8)
                         `cast`
                       (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]>_N)
                       ww9,
                     GHC.Tuple.()) #) } } } } }) -}
1d2d5e541e5133a54a0b5268187bad49
  $wa24 ::
    Graphics.UI.GLUT.Raw.Fonts.BitmapFont
    -> (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
    -> Graphics.GL.Types.GLclampf
    -> Graphics.GL.Types.GLclampf
    -> Graphics.GL.Types.GLclampf
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 16,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U(U)><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ t
                   @ s
                   @ u
                   @ v
                   w :: Graphics.UI.GLUT.Raw.Fonts.BitmapFont
                   w1 :: (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
                   w2 :: Graphics.GL.Types.GLclampf
                   w3 :: Graphics.GL.Types.GLclampf
                   w4 :: Graphics.GL.Types.GLclampf
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.IORef.IORef [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w5 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                        ww9
                        w5 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,,) framei timebasei fps ->
                 case (Graphics.UI.GLUT.Raw.Functions.ptr_glutGet
                         @ (Graphics.GL.Types.GLenum -> GHC.Types.IO Foreign.C.Types.CInt))
                        `cast`
                      (GHC.Ptr.FunPtr
                         (<GHC.Word.Word32>_P
                          ->_P (GHC.Types.IO
                                  (UnivCo opt_phantom phantom Foreign.C.Types.CInt GHC.Int.Int32))_P))_R of ds { GHC.Ptr.FunPtr ds2 ->
                 case {__dyn_ccall_GC "" GHC.Prim.Addr#
                                         -> GHC.Prim.Word#
                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Prim.Int# #)}
                        ds2
                        __word 700
                        ipv of wild1 { (#,#) ds4 ds5 ->
                 case timebasei of wild2 { GHC.Types.I# y ->
                 let {
                   a :: GHC.Prim.Int# = GHC.Prim.narrow32Int# ds5
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># (GHC.Prim.-# a y) 1000) of wild3 {
                   GHC.Types.False
                   -> case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                             ww9
                             (case framei of wild4 { GHC.Types.I# x ->
                              GHC.Types.I# (GHC.Prim.+# x 1) },
                              wild2,
                              fps)
                             ds4 of s2# { DEFAULT ->
                      case ww4
                             `cast`
                           (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Text.Text]>_N) of ww10 { GHC.STRef.STRef ww11 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ [Graphics.UI.Fungen.Text.Text]
                             ww11
                             s2# of ds3 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld
                             @ [Graphics.UI.Fungen.Text.Text]
                             ww11
                             (GHC.Types.:
                                @ (GHC.Base.String,
                                   Graphics.UI.GLUT.Raw.Fonts.BitmapFont,
                                   Graphics.UI.Fungen.Types.Point2D,
                                   Graphics.GL.Types.GLclampf,
                                   Graphics.GL.Types.GLclampf,
                                   Graphics.GL.Types.GLclampf)
                                (Graphics.UI.Fungen.Game.$sprintf3
                                   Graphics.UI.Fungen.Game.showFPS2
                                   (GHC.Types.:
                                      @ Text.Printf.UPrintf
                                      (Text.Printf.$fPrintfArgFloat_$cparseFormat fps,
                                       Text.Printf.$fPrintfArgFloat_$sformatRealFloat fps)
                                      (GHC.Types.[] @ Text.Printf.UPrintf)),
                                 w,
                                 w1,
                                 w2,
                                 w3,
                                 w4)
                                ipv3)
                             ipv2 of s2#1 { DEFAULT ->
                      (# s2#1,
                         (Graphics.UI.Fungen.Game.Game
                            @ t
                            @ s
                            @ u
                            @ v
                            ww
                            ww1
                            ww2
                            ww3
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ [Graphics.UI.Fungen.Text.Text]
                               ww11)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Text.Text]>_N)
                            ww5
                            ww6
                            ww7
                            ww8
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                               ww9)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <(GHC.Types.Int,
                                                             GHC.Types.Int,
                                                             GHC.Types.Float)>_N),
                          GHC.Tuple.()) #) } } } }
                   GHC.Types.True
                   -> case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld
                             @ (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                             ww9
                             (Graphics.UI.Fungen.Game.createGame6,
                              GHC.Types.I# a,
                              case framei of wild4 { GHC.Types.I# x ->
                              case GHC.Prim.divideFloat#
                                     (GHC.Prim.timesFloat#
                                        (GHC.Prim.int2Float# (GHC.Prim.+# x 1))
                                        __float 1000.0)
                                     (GHC.Prim.minusFloat#
                                        (GHC.Prim.int2Float# a)
                                        (GHC.Prim.int2Float# y)) of wild5 { DEFAULT ->
                              GHC.Types.F# wild5 } })
                             ds4 of s2# { DEFAULT ->
                      case ww4
                             `cast`
                           (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Text.Text]>_N) of ww10 { GHC.STRef.STRef ww11 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ [Graphics.UI.Fungen.Text.Text]
                             ww11
                             s2# of ds3 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld
                             @ [Graphics.UI.Fungen.Text.Text]
                             ww11
                             (GHC.Types.:
                                @ (GHC.Base.String,
                                   Graphics.UI.GLUT.Raw.Fonts.BitmapFont,
                                   Graphics.UI.Fungen.Types.Point2D,
                                   Graphics.GL.Types.GLclampf,
                                   Graphics.GL.Types.GLclampf,
                                   Graphics.GL.Types.GLclampf)
                                (Graphics.UI.Fungen.Game.$sprintf3
                                   Graphics.UI.Fungen.Game.showFPS2
                                   (GHC.Types.:
                                      @ Text.Printf.UPrintf
                                      (Text.Printf.$fPrintfArgFloat_$cparseFormat fps,
                                       Text.Printf.$fPrintfArgFloat_$sformatRealFloat fps)
                                      (GHC.Types.[] @ Text.Printf.UPrintf)),
                                 w,
                                 w1,
                                 w2,
                                 w3,
                                 w4)
                                ipv3)
                             ipv2 of s2#1 { DEFAULT ->
                      (# s2#1,
                         (Graphics.UI.Fungen.Game.Game
                            @ t
                            @ s
                            @ u
                            @ v
                            ww
                            ww1
                            ww2
                            ww3
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ [Graphics.UI.Fungen.Text.Text]
                               ww11)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Text.Text]>_N)
                            ww5
                            ww6
                            ww7
                            ww8
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                               ww9)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <(GHC.Types.Int,
                                                             GHC.Types.Int,
                                                             GHC.Types.Float)>_N),
                          GHC.Tuple.()) #) } } } } } } } } } }) -}
07e5bd52356af23ee01088a1c712ddb9
  $wa25 ::
    GHC.Types.Int
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 12,
     Strictness: <L,U(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U(U)><L,U>,
     Inline: [0],
     Unfolding: (\ @ t
                   @ s
                   @ u
                   @ v
                   w :: GHC.Types.Int
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.IORef.IORef [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Text.Text]
                        ww4
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 case Graphics.UI.Fungen.Text.putGameText1
                        ipv1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Text.Text]
                        ww4
                        (GHC.Types.[] @ Graphics.UI.Fungen.Text.Text)
                        ipv2 of s2# { DEFAULT ->
                 case ww9
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <(GHC.Types.Int,
                                                 GHC.Types.Int,
                                                 GHC.Types.Float)>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                        var#
                        s2# of ds3 { (#,#) ipv4 ipv5 ->
                 case ipv5 of wild1 { (,,) framei timebasei fps ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                        var#
                        (framei,
                         case timebasei of wild2 { GHC.Types.I# x ->
                         case w of wild3 { GHC.Types.I# y ->
                         GHC.Types.I# (GHC.Prim.+# x y) } },
                         fps)
                        ipv4 of s2#1 { DEFAULT ->
                 case (Graphics.UI.GLUT.Raw.Functions.ptr_glutGet
                         @ (Graphics.GL.Types.GLenum -> GHC.Types.IO Foreign.C.Types.CInt))
                        `cast`
                      (GHC.Ptr.FunPtr
                         (<GHC.Word.Word32>_P
                          ->_P (GHC.Types.IO
                                  (UnivCo opt_phantom phantom Foreign.C.Types.CInt GHC.Int.Int32))_P))_R of ds { GHC.Ptr.FunPtr ds4 ->
                 case {__dyn_ccall_GC "" GHC.Prim.Addr#
                                         -> GHC.Prim.Word#
                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Prim.Int# #)}
                        ds4
                        __word 700
                        s2#1 of wild2 { (#,#) ds5 ds6 ->
                 Graphics.UI.Fungen.Game.wait2
                   @ t
                   @ s
                   @ u
                   @ v
                   w
                   (GHC.Types.I# (GHC.Prim.narrow32Int# ds6))
                   (Graphics.UI.Fungen.Game.Game
                      @ t
                      @ s
                      @ u
                      @ v
                      ww
                      ww1
                      ww2
                      ww3
                      (GHC.STRef.STRef
                         @ GHC.Prim.RealWorld
                         @ [Graphics.UI.Fungen.Text.Text]
                         ww4)
                        `cast`
                      (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Text.Text]>_N)
                      ww5
                      ww6
                      ww7
                      ww8
                      wild
                        `cast`
                      (Sym (GHC.IORef.NTCo:IORef[0]) <(GHC.Types.Int,
                                                       GHC.Types.Int,
                                                       GHC.Types.Float)>_N))
                   ds5 } } } } } } } } }) -}
d55d201ac5ce834419e01eebcd0cd87c
  $wa3 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v,
           (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)) #)
  {- Arity: 12,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 let {
                   ds :: (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
                   = case w of wild { Graphics.UI.Fungen.Objects.GO ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                     case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                            @ s
                            ds2
                            ds4
                            ipv1 of ww10 { (#,,,,,,,,#) ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                     ww17 } }
                 } in
                 (# ipv,
                    (Graphics.UI.Fungen.Game.Game
                       @ t
                       @ s
                       @ u
                       @ v
                       ww
                       ww1
                       ww2
                       (GHC.STRef.STRef
                          @ GHC.Prim.RealWorld
                          @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                          ww3)
                         `cast`
                       (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                          s]>_N)
                       ww4
                       ww5
                       ww6
                       ww7
                       ww8
                       ww9,
                     (case ds of wild { (,) pX pY -> pX },
                      case ds of wild { (,) pX pY -> pY })) #) }) -}
8e7b49041d3f5e800f26199e9c706e07
  $wa4 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v,
           (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)) #)
  {- Arity: 12,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 let {
                   ds :: (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
                   = case w of wild { Graphics.UI.Fungen.Objects.GO ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                     case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                            @ s
                            ds2
                            ds4
                            ipv1 of ww10 { (#,,,,,,,,#) ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                     ww16 } }
                 } in
                 (# ipv,
                    (Graphics.UI.Fungen.Game.Game
                       @ t
                       @ s
                       @ u
                       @ v
                       ww
                       ww1
                       ww2
                       (GHC.STRef.STRef
                          @ GHC.Prim.RealWorld
                          @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                          ww3)
                         `cast`
                       (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                          s]>_N)
                       ww4
                       ww5
                       ww6
                       ww7
                       ww8
                       ww9,
                     (case ds of wild { (,) sX sY -> sX },
                      case ds of wild { (,) sX sY -> sY })) #) }) -}
79d5ea59f35ac58bcee79c929d2b20aa
  $wa5 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v,
           (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)) #)
  {- Arity: 12,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 let {
                   ds :: (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
                   = case w of wild { Graphics.UI.Fungen.Objects.GO ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                     case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                            @ s
                            ds2
                            ds4
                            ipv1 of ww10 { (#,,,,,,,,#) ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                     ww18 } }
                 } in
                 (# ipv,
                    (Graphics.UI.Fungen.Game.Game
                       @ t
                       @ s
                       @ u
                       @ v
                       ww
                       ww1
                       ww2
                       (GHC.STRef.STRef
                          @ GHC.Prim.RealWorld
                          @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                          ww3)
                         `cast`
                       (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                          s]>_N)
                       ww4
                       ww5
                       ww6
                       ww7
                       ww8
                       ww9,
                     (case ds of wild { (,) sX sY -> sX },
                      case ds of wild { (,) sX sY -> sY })) #) }) -}
a128937e9fd3687b2137933d9851531e
  $wa6 ::
    GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v,
           Graphics.UI.Fungen.Map.Tile v) #)
  {- Arity: 13,
     Strictness: <L,1*U(U)><L,U(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ t
                   @ s
                   @ u
                   @ v
                   ww :: GHC.Types.Int
                   ww1 :: GHC.Types.Int
                   ww2 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld (Graphics.UI.Fungen.Map.GameMap v)
                   ww3 :: GHC.IORef.IORef u
                   ww4 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww5 :: GHC.IORef.IORef [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww6 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww7 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww8 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww9 :: GHC.IORef.IORef t
                   ww10 :: GHC.IORef.IORef
                             [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww11 :: GHC.IORef.IORef
                             (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Graphics.UI.Fungen.Map.GameMap v)
                        ww2
                        w of ds1 { (#,#) ipv ipv1 ->
                 let {
                   $w$j :: GHC.Prim.State# GHC.Prim.RealWorld
                           -> Graphics.UI.Fungen.Game.Game t s u v
                           -> Graphics.UI.Fungen.Map.GameMap v
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                 (Graphics.UI.Fungen.Game.Game t s u v,
                                  Graphics.UI.Fungen.Map.Tile v) #)
                     {- Arity: 3, Strictness: <L,U><L,U><S,1*U>, Inline: [0] -}
                   = \ w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot]
                       ww12 :: Graphics.UI.Fungen.Game.Game t s u v[OneShot]
                       ww13 :: Graphics.UI.Fungen.Map.GameMap v[OneShot] ->
                     case ww13 of wild {
                       DEFAULT
                       -> case Graphics.UI.Fungen.Game.getTileFromIndex3
                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                    (Graphics.UI.Fungen.Game.Game t s u v,
                                     Graphics.UI.Fungen.Map.Tile v) #)
                          of {}
                       Graphics.UI.Fungen.Map.TileMap ds2 ds3 ds4 ds5 ds6
                       -> let {
                            $w$j1 :: GHC.Prim.Int#
                                     -> GHC.Prim.Int#
                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                           (Graphics.UI.Fungen.Game.Game t s u v,
                                            Graphics.UI.Fungen.Map.Tile v) #)
                              {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0] -}
                            = \ ww14 :: GHC.Prim.Int#[OneShot]
                                ww15 :: GHC.Prim.Int#[OneShot] ->
                              case ww of wild1 { GHC.Types.I# y ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww14 y) of wild2 {
                                GHC.Types.False
                                -> case ww1 of ww16 { GHC.Types.I# ww17 ->
                                   case Graphics.UI.Fungen.Game.getTileFromIndex2
                                          @ t
                                          @ s
                                          @ u
                                          @ v
                                          y
                                          ww17
                                   ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                             (Graphics.UI.Fungen.Game.Game t s u v,
                                              Graphics.UI.Fungen.Map.Tile v) #)
                                   of {} }
                                GHC.Types.True
                                -> case ww1 of wild3 { GHC.Types.I# y1 ->
                                   case GHC.Prim.tagToEnum#
                                          @ GHC.Types.Bool
                                          (GHC.Prim.>=# ww15 y1) of wild4 {
                                     GHC.Types.False
                                     -> case Graphics.UI.Fungen.Game.getTileFromIndex2
                                               @ t
                                               @ s
                                               @ u
                                               @ v
                                               y
                                               y1
                                        ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                  (Graphics.UI.Fungen.Game.Game t s u v,
                                                   Graphics.UI.Fungen.Map.Tile v) #)
                                        of {}
                                     GHC.Types.True
                                     -> case GHC.Prim.tagToEnum#
                                               @ GHC.Types.Bool
                                               (GHC.Prim.>=# y 0) of wild5 {
                                          GHC.Types.False
                                          -> case Graphics.UI.Fungen.Game.getTileFromIndex2
                                                    @ t
                                                    @ s
                                                    @ u
                                                    @ v
                                                    y
                                                    y1
                                             ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       (Graphics.UI.Fungen.Game.Game t s u v,
                                                        Graphics.UI.Fungen.Map.Tile v) #)
                                             of {}
                                          GHC.Types.True
                                          -> case GHC.Prim.tagToEnum#
                                                    @ GHC.Types.Bool
                                                    (GHC.Prim.>=# y1 0) of wild6 {
                                               GHC.Types.False
                                               -> case Graphics.UI.Fungen.Game.getTileFromIndex2
                                                         @ t
                                                         @ s
                                                         @ u
                                                         @ v
                                                         y
                                                         y1
                                                  ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                            (Graphics.UI.Fungen.Game.Game t s u v,
                                                             Graphics.UI.Fungen.Map.Tile v) #)
                                                  of {}
                                               GHC.Types.True
                                               -> (# w1,
                                                     (ww12,
                                                      GHC.List.$w!!
                                                        @ (Graphics.UI.Fungen.Map.Tile v)
                                                        (GHC.List.$w!!
                                                           @ [Graphics.UI.Fungen.Map.Tile v]
                                                           ds2
                                                           (GHC.Prim.-# ww14 y))
                                                        y1) #) } } } } } }
                          } in
                          case ds2 of wild1 {
                            [] -> $w$j1 0 0
                            : a3 ds
                            -> case GHC.List.$wlenAcc
                                      @ [Graphics.UI.Fungen.Map.Tile v]
                                      wild1
                                      0 of ww14 { DEFAULT ->
                               case GHC.List.$wlenAcc
                                      @ (Graphics.UI.Fungen.Map.Tile v)
                                      a3
                                      0 of ww15 { DEFAULT ->
                               $w$j1 (GHC.Prim.-# ww14 1) (GHC.Prim.-# ww15 1) } } } }
                 } in
                 case ipv1 of wild {
                   DEFAULT
                   -> $w$j
                        ipv
                        (Graphics.UI.Fungen.Game.Game
                           @ t
                           @ s
                           @ u
                           @ v
                           (GHC.STRef.STRef
                              @ GHC.Prim.RealWorld
                              @ (Graphics.UI.Fungen.Map.GameMap v)
                              ww2)
                             `cast`
                           (Sym (GHC.IORef.NTCo:IORef[0]) <Graphics.UI.Fungen.Map.GameMap
                                                             v>_N)
                           ww3
                           ww4
                           ww5
                           ww6
                           ww7
                           ww8
                           ww9
                           ww10
                           ww11)
                        wild
                   Graphics.UI.Fungen.Map.MultiMap ds2 ds3
                   -> case ds3 of ww12 { GHC.Types.I# ww13 ->
                      $w$j
                        ipv
                        (Graphics.UI.Fungen.Game.Game
                           @ t
                           @ s
                           @ u
                           @ v
                           (GHC.STRef.STRef
                              @ GHC.Prim.RealWorld
                              @ (Graphics.UI.Fungen.Map.GameMap v)
                              ww2)
                             `cast`
                           (Sym (GHC.IORef.NTCo:IORef[0]) <Graphics.UI.Fungen.Map.GameMap
                                                             v>_N)
                           ww3
                           ww4
                           ww5
                           ww6
                           ww7
                           ww8
                           ww9
                           ww10
                           ww11)
                        (GHC.List.$w!!
                           @ (Graphics.UI.Fungen.Map.GameMap v)
                           ds2
                           ww13) } } }) -}
644ae9e5093a9b5bac9f228b852dbecb
  $wa7 ::
    Graphics.GL.Types.GLdouble
    -> Graphics.GL.Types.GLdouble
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v,
           Graphics.UI.Fungen.Map.Tile v) #)
  {- Arity: 13,
     Strictness: <L,1*U(U)><L,1*U(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
c26a1ab5abe7706361676efaf803fc57
  $wa8 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 12,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 case w of wild { Graphics.UI.Fungen.Objects.GO ds ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                        @ s
                        ds
                        ds3
                        ipv1 of ww10 { (#,,,,,,,,#) ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                 case ww15 of wild1 {
                   GHC.Types.False
                   -> case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                             ww3
                             ipv of ds10 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                             ww3
                             ipv2 of ds11 { (#,#) ipv4 ipv5 ->
                      (# ipv4,
                         (Graphics.UI.Fungen.Game.Game
                            @ t
                            @ s
                            @ u
                            @ v
                            ww
                            ww1
                            ww2
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                               ww3)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                               s]>_N)
                            ww4
                            ww5
                            ww6
                            ww7
                            ww8
                            ww9,
                          case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                 @ s
                                 ds
                                 ds3
                                 ipv3 of ww20 { (#,,,,,,,,#) ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ->
                          case ww27 of wild2 { (,) pX pY ->
                          case pY of wild3 { GHC.Types.D# x ->
                          case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                 @ s
                                 ds
                                 ds3
                                 ipv5 of ww30 { (#,,,,,,,,#) ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ->
                          case ww36 of wild4 { (,) sX sY ->
                          case sY of wild5 { GHC.Types.D# x1 ->
                          GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<##
                               (GHC.Prim.-## x (GHC.Prim./## x1 2.0))
                               0.0) } } } } } }) #) } }
                   GHC.Types.True
                   -> (# ipv,
                         (Graphics.UI.Fungen.Game.Game
                            @ t
                            @ s
                            @ u
                            @ v
                            ww
                            ww1
                            ww2
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                               ww3)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                               s]>_N)
                            ww4
                            ww5
                            ww6
                            ww7
                            ww8
                            ww9,
                          GHC.Types.False) #) } } } }) -}
1a613ead2fd14cf1022e8bf5e16ebc4e
  $wa9 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
    -> GHC.IORef.IORef u
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
    -> GHC.IORef.IORef t
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 12,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   ww :: GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
                   ww1 :: GHC.IORef.IORef u
                   ww2 :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
                   ww3 :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld [Graphics.UI.Fungen.Objects.ObjectManager s]
                   ww4 :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
                   ww5 :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
                   ww6 :: GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
                   ww7 :: GHC.IORef.IORef t
                   ww8 :: GHC.IORef.IORef
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                   ww9 :: GHC.IORef.IORef
                            (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        ww3
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 case w of wild { Graphics.UI.Fungen.Objects.GO ds ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                        @ s
                        ds
                        ds3
                        ipv1 of ww10 { (#,,,,,,,,#) ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                 case ww15 of wild1 {
                   GHC.Types.False
                   -> case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                             ww3
                             ipv of ds10 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                             ww3
                             ipv2 of ds11 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                             ww3
                             ipv4 of ds12 { (#,#) ipv6 ipv7 ->
                      (# ipv6,
                         (Graphics.UI.Fungen.Game.Game
                            @ t
                            @ s
                            @ u
                            @ v
                            ww
                            ww1
                            ww2
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                               ww3)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                               s]>_N)
                            ww4
                            ww5
                            ww6
                            ww7
                            ww8
                            ww9,
                          case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                 @ s
                                 ds
                                 ds3
                                 ipv3 of ww20 { (#,,,,,,,,#) ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ->
                          case ww27 of wild2 { (,) pX pY ->
                          case pY of wild3 { GHC.Types.D# x ->
                          case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                 @ s
                                 ds
                                 ds3
                                 ipv5 of ww30 { (#,,,,,,,,#) ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ->
                          case ww36 of wild4 { (,) sX sY ->
                          case sY of wild5 { GHC.Types.D# x1 ->
                          case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                                 @ s
                                 ds
                                 ds3
                                 ipv7 of ww40 { (#,,,,,,,,#) ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ->
                          case ww48 of wild6 { (,) sX1 sY1 ->
                          case sY1 of wild7 { GHC.Types.D# y ->
                          GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<##
                               (GHC.Prim.+## (GHC.Prim.-## x (GHC.Prim./## x1 2.0)) y)
                               0.0) } } } } } } } } }) #) } } }
                   GHC.Types.True
                   -> (# ipv,
                         (Graphics.UI.Fungen.Game.Game
                            @ t
                            @ s
                            @ u
                            @ v
                            ww
                            ww1
                            ww2
                            (GHC.STRef.STRef
                               @ GHC.Prim.RealWorld
                               @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                               ww3)
                              `cast`
                            (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                               s]>_N)
                            ww4
                            ww5
                            ww6
                            ww7
                            ww8
                            ww9,
                          GHC.Types.False) #) } } } }) -}
b9dc93fcbb36f0b7b05b77ba74203b18
  data Game t s u v
    = Game {gameMap :: GHC.IORef.IORef
                         (Graphics.UI.Fungen.Map.GameMap v),
            gameState :: GHC.IORef.IORef u,
            gameFlags :: GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags,
            objManagers :: GHC.IORef.IORef
                             [Graphics.UI.Fungen.Objects.ObjectManager s],
            textList :: GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text],
            quadricObj :: Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive,
            windowConfig :: GHC.IORef.IORef
                              Graphics.UI.Fungen.Types.WindowConfig,
            gameAttribute :: GHC.IORef.IORef t,
            pictureList :: GHC.IORef.IORef
                             [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject],
            fpsInfo :: GHC.IORef.IORef
                         (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)}
44ae33ae1ed33c23db7f7032f0954a94
  type GameFlags = (GHC.Types.Bool, GHC.Types.Bool, GHC.Types.Bool)
023f764656429577791b816b79fd1cc6
  newtype IOGame t s u v a
    = IOG (Graphics.UI.Fungen.Game.Game t s u v
           -> GHC.Types.IO (Graphics.UI.Fungen.Game.Game t s u v, a))
283cdec68b1594cf44a29904d94ed05c
  addObjectsToGroup ::
    [Graphics.UI.Fungen.Objects.GameObject s]
    -> GHC.Base.String -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 4,
     Strictness: <L,U><L,U><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.addObjectsToGroup1
                  `cast`
                (forall s t u v.
                 <[Graphics.UI.Fungen.Objects.GameObject s]>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
64f74bac0f0305b264280124f532d8da
  addObjectsToGroup1 ::
    [Graphics.UI.Fungen.Objects.GameObject s]
    -> GHC.Base.String
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 4,
     Strictness: <L,U><L,U><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   objs :: [Graphics.UI.Fungen.Objects.GameObject s]
                   managerName :: GHC.Base.String
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case eta of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds3
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        var#
                        eta1 of ds10 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        var#
                        (Graphics.UI.Fungen.Objects.addObjectsToManager
                           @ s
                           objs
                           managerName
                           ipv1)
                        ipv of s2# { DEFAULT ->
                 (# s2#, (wild, GHC.Tuple.()) #) } } } }) -}
96e097ad4392984a42551882c60cb10d
  addObjectsToNewGroup ::
    [Graphics.UI.Fungen.Objects.GameObject s]
    -> GHC.Base.String -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ @ s
                   @ t
                   @ u
                   @ v
                   objs :: [Graphics.UI.Fungen.Objects.GameObject s]
                   newMngName :: GHC.Base.String ->
                 let {
                   a :: GHC.Integer.Type.Integer
                   = case GHC.List.$wlenAcc
                            @ (Graphics.UI.Fungen.Objects.GameObject s)
                            objs
                            0 of ww2 { DEFAULT ->
                     GHC.Integer.Type.smallInteger ww2 }
                 } in
                 let {
                   a1 :: [Graphics.UI.Fungen.Objects.GameObject s]
                   = Graphics.UI.Fungen.Objects.objectGroupAux
                       @ s
                       objs
                       newMngName
                       Graphics.UI.Fungen.Objects.object2
                 } in
                 let {
                   newManager :: Graphics.UI.Fungen.Objects.ObjectManager s
                     {- Strictness: m -}
                   = Graphics.UI.Fungen.Objects.OM @ s newMngName a a1
                 } in
                 (\ s1 :: Graphics.UI.Fungen.Game.Game t s u v
                    s2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case s1 of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                  case ds3
                         `cast`
                       (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                    s]>_N) of wild1 { GHC.STRef.STRef var# ->
                  case GHC.Prim.readMutVar#
                         @ GHC.Prim.RealWorld
                         @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                         var#
                         s2 of ds10 { (#,#) ipv ipv1 ->
                  case GHC.Prim.writeMutVar#
                         @ GHC.Prim.RealWorld
                         @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                         var#
                         (GHC.Types.:
                            @ (Graphics.UI.Fungen.Objects.ObjectManager s)
                            newManager
                            ipv1)
                         ipv of s2# { DEFAULT ->
                  (# s2#, (wild, GHC.Tuple.()) #) } } } })
                   `cast`
                 (Trans
                      (<Graphics.UI.Fungen.Game.Game t s u v>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                      (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                <t>_R <s>_R <u>_R <v>_R <()>_R)))) -}
4097e5870b0f750df17b23031f6b65f1
  clearScreen ::
    Graphics.GL.Types.GLclampf
    -> Graphics.GL.Types.GLclampf
    -> Graphics.GL.Types.GLclampf
    -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 5, Strictness: <S,1*U(U)><S,1*U(U)><S,1*U(U)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.clearScreen1
                  `cast`
                (forall t s u v.
                 <Graphics.GL.Types.GLclampf>_R
                 ->_R <Graphics.GL.Types.GLclampf>_R
                 ->_R <Graphics.GL.Types.GLclampf>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
d4f62e3735d7504c5c5bbbb91a296868
  clearScreen1 ::
    Graphics.GL.Types.GLclampf
    -> Graphics.GL.Types.GLclampf
    -> Graphics.GL.Types.GLclampf
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 5, Strictness: <S,1*U(U)><S,1*U(U)><S,1*U(U)><L,U><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   r :: Graphics.GL.Types.GLclampf
                   g :: Graphics.GL.Types.GLclampf
                   b :: Graphics.GL.Types.GLclampf
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case r of ww { GHC.Types.F# ww1 ->
                 case g of ww2 { GHC.Types.F# ww3 ->
                 case b of ww4 { GHC.Types.F# ww5 ->
                 case Graphics.UI.Fungen.Map.$wa
                        ww1
                        ww3
                        ww5
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (eta, ipv1) #) } } } }) -}
d2b1265c2976b0761d137a3587e4212c
  createGame ::
    Graphics.UI.Fungen.Map.GameMap v
    -> [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> Graphics.UI.Fungen.Types.WindowConfig
    -> u
    -> t
    -> Graphics.UI.Fungen.Loader.FilePictureList
    -> GHC.Types.IO (Graphics.UI.Fungen.Game.Game t s u v)
  {- Arity: 7, Strictness: <L,U><L,U><L,U><L,U><L,U><L,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.createGame1
                  `cast`
                (forall v s u t.
                 <Graphics.UI.Fungen.Map.GameMap v>_R
                 ->_R <[Graphics.UI.Fungen.Objects.ObjectManager s]>_R
                 ->_R <Graphics.UI.Fungen.Types.WindowConfig>_R
                 ->_R <u>_R
                 ->_R <t>_R
                 ->_R <Graphics.UI.Fungen.Loader.FilePictureList>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <Graphics.UI.Fungen.Game.Game t s u v>_R)) -}
14f9fa75c1ce2b214376a1500bb4beb3
  createGame1 ::
    Graphics.UI.Fungen.Map.GameMap v
    -> [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> Graphics.UI.Fungen.Types.WindowConfig
    -> u
    -> t
    -> Graphics.UI.Fungen.Loader.FilePictureList
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.Fungen.Game.Game t s u v #)
  {- Arity: 7, Strictness: <L,U><L,U><L,U><L,U><L,U><L,1*U><L,U>,
     Unfolding: (\ @ v
                   @ s
                   @ u
                   @ t
                   gMap :: Graphics.UI.Fungen.Map.GameMap v
                   objectManagers :: [Graphics.UI.Fungen.Objects.ObjectManager s]
                   winConf :: Graphics.UI.Fungen.Types.WindowConfig
                   gState :: u
                   gAttrib :: t
                   filePicList :: Graphics.UI.Fungen.Loader.FilePictureList
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.Prim.newMutVar#
                        @ (Graphics.UI.Fungen.Map.GameMap v)
                        @ GHC.Prim.RealWorld
                        gMap
                        eta of ds { (#,#) ipv ipv1 ->
                 case GHC.Prim.newMutVar#
                        @ u
                        @ GHC.Prim.RealWorld
                        gState
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.newMutVar#
                        @ (GHC.Types.Bool, GHC.Types.Bool, GHC.Types.Bool)
                        @ GHC.Prim.RealWorld
                        Graphics.UI.Fungen.Game.createGame7
                        ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.newMutVar#
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        @ GHC.Prim.RealWorld
                        objectManagers
                        ipv4 of ds3 { (#,#) ipv6 ipv7 ->
                 case GHC.Prim.newMutVar#
                        @ [Graphics.UI.Fungen.Text.Text]
                        @ GHC.Prim.RealWorld
                        (GHC.Types.[] @ Graphics.UI.Fungen.Text.Text)
                        ipv6 of ds4 { (#,#) ipv8 ipv9 ->
                 case GHC.Prim.newMutVar#
                        @ Graphics.UI.Fungen.Types.WindowConfig
                        @ GHC.Prim.RealWorld
                        winConf
                        ipv8 of ds5 { (#,#) ipv10 ipv11 ->
                 case GHC.Prim.newMutVar#
                        @ t
                        @ GHC.Prim.RealWorld
                        gAttrib
                        ipv10 of ds6 { (#,#) ipv12 ipv13 ->
                 case Graphics.UI.Fungen.Loader.loadBitmapList2
                        (GHC.Base.map
                           @ (GHC.IO.FilePath, Graphics.UI.Fungen.Types.InvList)
                           @ (GHC.IO.FilePath,
                              GHC.Base.Maybe Graphics.UI.Fungen.Types.ColorList3)
                           Graphics.UI.Fungen.Util.pathAndInv2color3List
                           filePicList)
                        (GHC.Types.[] @ Graphics.UI.Fungen.Types.AwbfBitmap)
                        ipv12 of ds7 { (#,#) ipv14 ipv15 ->
                 let {
                   bmps :: [Graphics.UI.Fungen.Types.AwbfBitmap]
                   = GHC.List.reverse1
                       @ Graphics.UI.Fungen.Types.AwbfBitmap
                       ipv15
                       (GHC.Types.[] @ Graphics.UI.Fungen.Types.AwbfBitmap)
                 } in
                 case (Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.$fGeneratableObjectNameTextureObject_$cgenObjectNames
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         (case GHC.List.$wlenAcc
                                 @ (Graphics.GL.Types.GLsizei,
                                    Graphics.GL.Types.GLsizei,
                                    Graphics.Rendering.OpenGL.GL.PixelData.PixelData
                                      Graphics.GL.Types.GLubyte)
                                 bmps
                                 0 of ww2 { DEFAULT ->
                          GHC.Types.I# ww2 }))
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <[Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]>_R)
                        ipv14 of ds8 { (#,#) ipv16 ipv17 ->
                 case Graphics.UI.Fungen.Util.texStuff1
                        ipv17
                        bmps
                        ipv16 of ds9 { (#,#) ipv18 ipv19 ->
                 case GHC.Prim.newMutVar#
                        @ [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                        @ GHC.Prim.RealWorld
                        ipv17
                        ipv18 of ds10 { (#,#) ipv20 ipv21 ->
                 case GHC.Prim.newMutVar#
                        @ (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                        @ GHC.Prim.RealWorld
                        Graphics.UI.Fungen.Game.createGame4
                        ipv20 of ds11 { (#,#) ipv22 ipv23 ->
                 (# ipv22,
                    Graphics.UI.Fungen.Game.Game
                      @ t
                      @ s
                      @ u
                      @ v
                      (GHC.STRef.STRef
                         @ GHC.Prim.RealWorld
                         @ (Graphics.UI.Fungen.Map.GameMap v)
                         ipv1)
                        `cast`
                      (Sym (GHC.IORef.NTCo:IORef[0]) <Graphics.UI.Fungen.Map.GameMap
                                                        v>_N)
                      (GHC.STRef.STRef @ GHC.Prim.RealWorld @ u ipv3)
                        `cast`
                      (Sym (GHC.IORef.NTCo:IORef[0]) <u>_N)
                      (GHC.STRef.STRef
                         @ GHC.Prim.RealWorld
                         @ (GHC.Types.Bool, GHC.Types.Bool, GHC.Types.Bool)
                         ipv5)
                        `cast`
                      (Sym (GHC.IORef.NTCo:IORef[0]) <(GHC.Types.Bool,
                                                       GHC.Types.Bool,
                                                       GHC.Types.Bool)>_N)
                      (GHC.STRef.STRef
                         @ GHC.Prim.RealWorld
                         @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                         ipv7)
                        `cast`
                      (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Objects.ObjectManager
                                                         s]>_N)
                      (GHC.STRef.STRef
                         @ GHC.Prim.RealWorld
                         @ [Graphics.UI.Fungen.Text.Text]
                         ipv9)
                        `cast`
                      (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.UI.Fungen.Text.Text]>_N)
                      Graphics.UI.Fungen.Game.createGame_gQ
                      (GHC.STRef.STRef
                         @ GHC.Prim.RealWorld
                         @ Graphics.UI.Fungen.Types.WindowConfig
                         ipv11)
                        `cast`
                      (Sym (GHC.IORef.NTCo:IORef[0]) <Graphics.UI.Fungen.Types.WindowConfig>_N)
                      (GHC.STRef.STRef @ GHC.Prim.RealWorld @ t ipv13)
                        `cast`
                      (Sym (GHC.IORef.NTCo:IORef[0]) <t>_N)
                      (GHC.STRef.STRef
                         @ GHC.Prim.RealWorld
                         @ [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                         ipv21)
                        `cast`
                      (Sym (GHC.IORef.NTCo:IORef[0]) <[Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]>_N)
                      (GHC.STRef.STRef
                         @ GHC.Prim.RealWorld
                         @ (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
                         ipv23)
                        `cast`
                      (Sym (GHC.IORef.NTCo:IORef[0]) <(GHC.Types.Int,
                                                       GHC.Types.Int,
                                                       GHC.Types.Float)>_N) #) } } } } } } } } } } } }) -}
62570c84808b3805921c235e6c941088
  createGame2 :: GHC.Int.Int32
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Int.I32# 0) -}
c082a9e83ad0ebb9c16a5d09d519dc2a
  createGame3 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0) -}
646f87ffd123ab66af9e140ac4bcb293
  createGame4 :: (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Graphics.UI.Fungen.Game.createGame6,
                  Graphics.UI.Fungen.Game.createGame6,
                  Graphics.UI.Fungen.Game.createGame5)) -}
41eb5bf5e723caa5b7cb25befefd588d
  createGame5 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.F# __float 0.0) -}
03a33ec214fbddbfca7bb4feddb4343a
  createGame6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0) -}
a5744409a0d14010459cef35c9721467
  createGame7 :: (GHC.Types.Bool, GHC.Types.Bool, GHC.Types.Bool)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((GHC.Types.True, GHC.Types.True, GHC.Types.True)) -}
d09c5bd8aa1809010a2c3036ef703095
  createGame_gQ ::
    Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Graphics.Rendering.OpenGL.GLU.Quadrics.Sphere
                   Graphics.UI.Fungen.Game.createGame3
                   Graphics.UI.Fungen.Game.createGame2
                   Graphics.UI.Fungen.Game.createGame2) -}
8102cec89c5ed302f9bef758b7ff3424
  destroyObject ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 3,
     Strictness: <L,1*U(U,U,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.destroyObject1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
9ba797676b86ae7e2ce87de77364566a
  destroyObject1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 3,
     Strictness: <L,1*U(U,U,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Game.Game t s u v
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w1 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   ww1
                   ww2
                   ww3
                   ww12
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w2 } }) -}
f993d65fb32348fc7a46de855dcde538
  destroyObjects ::
    [Graphics.UI.Fungen.Objects.GameObject s]
    -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 3, Strictness: <S,1*U><L,U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.destroyObjects1
                  `cast`
                (forall s t u v.
                 <[Graphics.UI.Fungen.Objects.GameObject s]>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
807d748fb3a0762e165896aedcc072b9
  destroyObjects1 ::
    [Graphics.UI.Fungen.Objects.GameObject s]
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 3,
     Strictness: <S,1*U><L,U(U,U,U,U(U),U,U,U,U,U,U)><L,U> -}
a88f1b76fc27c47f07e8bc49956b2671
  disableGameFlags :: Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.disableGameFlags1
                  `cast`
                (forall t s u v.
                 Trans
                     (<Graphics.UI.Fungen.Game.Game t s u v>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                     (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                               <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
1d757de8d5eb275179566bfdea898227
  disableGameFlags1 ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   game :: Graphics.UI.Fungen.Game.Game t s u v
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case game of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds2
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <Graphics.UI.Fungen.Game.GameFlags>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ Graphics.UI.Fungen.Game.GameFlags
                        var#
                        Graphics.UI.Fungen.Game.disableGameFlags2
                        eta of s2# { DEFAULT ->
                 (# s2#, (wild, GHC.Tuple.()) #) } } }) -}
99e76d24f2a634c58c16139fd9cf9952
  disableGameFlags2 ::
    (GHC.Types.Bool, GHC.Types.Bool, GHC.Types.Bool)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((GHC.Types.False, GHC.Types.False, GHC.Types.False)) -}
0ff3f6e5bbcf021cc344b0b88f7bbd58
  disableMapDrawing :: Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.disableMapDrawing1
                  `cast`
                (forall t s u v.
                 Trans
                     (<Graphics.UI.Fungen.Game.Game t s u v>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                     (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                               <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
10855732b42758f931effe57c4b768b0
  disableMapDrawing1 ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   s1 :: Graphics.UI.Fungen.Game.Game t s u v
                   s2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case s1 of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds2
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <Graphics.UI.Fungen.Game.GameFlags>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Graphics.UI.Fungen.Game.GameFlags
                        var#
                        s2 of ds10 { (#,#) ipv ipv1 ->
                 case ipv1 of wild2 { (,,) ds11 od om ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ Graphics.UI.Fungen.Game.GameFlags
                        var#
                        (GHC.Types.False, od, om)
                        ipv of s2# { DEFAULT ->
                 (# s2#, (wild, GHC.Tuple.()) #) } } } } }) -}
0f0947ed02e56e5820ba4cfa83a084d5
  disableObjectsDrawing :: Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.disableObjectsDrawing1
                  `cast`
                (forall t s u v.
                 Trans
                     (<Graphics.UI.Fungen.Game.Game t s u v>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                     (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                               <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
e8a0ce08b7f20b713d7c758107cc579a
  disableObjectsDrawing1 ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   s1 :: Graphics.UI.Fungen.Game.Game t s u v
                   s2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case s1 of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds2
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <Graphics.UI.Fungen.Game.GameFlags>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Graphics.UI.Fungen.Game.GameFlags
                        var#
                        s2 of ds10 { (#,#) ipv ipv1 ->
                 case ipv1 of wild2 { (,,) md ds11 om ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ Graphics.UI.Fungen.Game.GameFlags
                        var#
                        (md, GHC.Types.False, om)
                        ipv of s2# { DEFAULT ->
                 (# s2#, (wild, GHC.Tuple.()) #) } } } } }) -}
f54b04c7e01c73d381bb23822cff1ff2
  disableObjectsMoving :: Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.disableObjectsMoving1
                  `cast`
                (forall t s u v.
                 Trans
                     (<Graphics.UI.Fungen.Game.Game t s u v>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                     (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                               <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
c1f1fe536ce338b018bb3df2d0c7f098
  disableObjectsMoving1 ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   s1 :: Graphics.UI.Fungen.Game.Game t s u v
                   s2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case s1 of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds2
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <Graphics.UI.Fungen.Game.GameFlags>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Graphics.UI.Fungen.Game.GameFlags
                        var#
                        s2 of ds10 { (#,#) ipv ipv1 ->
                 case ipv1 of wild2 { (,,) md od ds11 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ Graphics.UI.Fungen.Game.GameFlags
                        var#
                        (md, od, GHC.Types.False)
                        ipv of s2# { DEFAULT ->
                 (# s2#, (wild, GHC.Tuple.()) #) } } } } }) -}
da8c0d89b1d97f862b022a6e10da85c0
  drawAllObjects :: Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 2,
     Strictness: <S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U(U),U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.drawAllObjects1
                  `cast`
                (forall t s u v.
                 Trans
                     (<Graphics.UI.Fungen.Game.Game t s u v>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                     (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                               <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
ee9dc8c9f819431565ae92d20261fa0c
  drawAllObjects1 ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 2,
     Strictness: <S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U(U),U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   s1 :: Graphics.UI.Fungen.Game.Game t s u v
                   s2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case s1 of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds3
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        var#
                        s2 of ds10 { (#,#) ipv ipv1 ->
                 case ds8
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]>_N) of wild2 { GHC.STRef.STRef var#1 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                        var#1
                        ipv of ds11 { (#,#) ipv2 ipv3 ->
                 case Graphics.UI.Fungen.Objects.$wa1
                        @ s
                        ipv1
                        ipv3
                        ipv2 of ds12 { (#,#) ipv4 ipv5 ->
                 (# ipv4, (wild, ipv5) #) } } } } } }) -}
ee8ccf30dee763a29468cd630b856700
  drawMap :: Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 2,
     Strictness: <S(SLLLLLLLLL),1*U(U(U),U,U,U,U,U,U(U),U,U(U),U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.drawMap1
                  `cast`
                (forall t s u v.
                 Trans
                     (<Graphics.UI.Fungen.Game.Game t s u v>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                     (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                               <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
b3423015947405b5c9ecdbe9a86b7d50
  drawMap1 ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 2,
     Strictness: <S(SLLLLLLLLL),1*U(U(U),U,U,U,U,U,U(U),U,U(U),U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Game.Game t s u v
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww1
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <Graphics.UI.Fungen.Map.GameMap
                                                  v>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa1
                   @ t
                   @ s
                   @ u
                   @ v
                   ww12
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w1 } }) -}
172c076b6af0f7af6abc1e8c051ab029
  drawObject ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 3,
     Strictness: <L,1*U(A,A,A,1*U,A,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)),A,A)><S(LLLLLLLLSL),1*U(U,U,U,U,U,U,U,U,U(U),U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.drawObject1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
246341c4998e68958645922a2d6374c6
  drawObject1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 3,
     Strictness: <L,1*U(A,A,A,1*U,A,1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)),A,A)><S(LLLLLLLLSL),1*U(U,U,U,U,U,U,U,U,U(U),U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Game.Game t s u v
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w1 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww9
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa2
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww12
                   ww10
                   w2 } }) -}
89be51fc298a807e38dc9b3d0a2ee3a5
  enableGameFlags :: Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.enableGameFlags1
                  `cast`
                (forall t s u v.
                 Trans
                     (<Graphics.UI.Fungen.Game.Game t s u v>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                     (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                               <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
15ede43a5a69c66a703accb050d62040
  enableGameFlags1 ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   game :: Graphics.UI.Fungen.Game.Game t s u v
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case game of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds2
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <Graphics.UI.Fungen.Game.GameFlags>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ Graphics.UI.Fungen.Game.GameFlags
                        var#
                        Graphics.UI.Fungen.Game.createGame7
                        eta of s2# { DEFAULT ->
                 (# s2#, (wild, GHC.Tuple.()) #) } } }) -}
6eafa267ff72dd412308c67c687a0ae1
  enableMapDrawing :: Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.enableMapDrawing1
                  `cast`
                (forall t s u v.
                 Trans
                     (<Graphics.UI.Fungen.Game.Game t s u v>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                     (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                               <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
e2d65821ea50bfe76127b8f0f3f094e4
  enableMapDrawing1 ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   s1 :: Graphics.UI.Fungen.Game.Game t s u v
                   s2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case s1 of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds2
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <Graphics.UI.Fungen.Game.GameFlags>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Graphics.UI.Fungen.Game.GameFlags
                        var#
                        s2 of ds10 { (#,#) ipv ipv1 ->
                 case ipv1 of wild2 { (,,) ds11 od om ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ Graphics.UI.Fungen.Game.GameFlags
                        var#
                        (GHC.Types.True, od, om)
                        ipv of s2# { DEFAULT ->
                 (# s2#, (wild, GHC.Tuple.()) #) } } } } }) -}
7ce2c0a70b1b0a421e0795e034a8d344
  enableObjectsDrawing :: Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.enableObjectsDrawing1
                  `cast`
                (forall t s u v.
                 Trans
                     (<Graphics.UI.Fungen.Game.Game t s u v>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                     (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                               <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
43fb3881550964c0055df6867c7c3f91
  enableObjectsDrawing1 ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   s1 :: Graphics.UI.Fungen.Game.Game t s u v
                   s2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case s1 of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds2
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <Graphics.UI.Fungen.Game.GameFlags>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Graphics.UI.Fungen.Game.GameFlags
                        var#
                        s2 of ds10 { (#,#) ipv ipv1 ->
                 case ipv1 of wild2 { (,,) md ds11 om ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ Graphics.UI.Fungen.Game.GameFlags
                        var#
                        (md, GHC.Types.True, om)
                        ipv of s2# { DEFAULT ->
                 (# s2#, (wild, GHC.Tuple.()) #) } } } } }) -}
528faba47d5c3397a4bd2b643497e8a1
  enableObjectsMoving :: Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.enableObjectsMoving1
                  `cast`
                (forall t s u v.
                 Trans
                     (<Graphics.UI.Fungen.Game.Game t s u v>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                     (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                               <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
8ab0cb11618543b43f283389030a404c
  enableObjectsMoving1 ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   s1 :: Graphics.UI.Fungen.Game.Game t s u v
                   s2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case s1 of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds2
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <Graphics.UI.Fungen.Game.GameFlags>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Graphics.UI.Fungen.Game.GameFlags
                        var#
                        s2 of ds10 { (#,#) ipv ipv1 ->
                 case ipv1 of wild2 { (,,) md od ds11 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ Graphics.UI.Fungen.Game.GameFlags
                        var#
                        (md, od, GHC.Types.True)
                        ipv of s2# { DEFAULT ->
                 (# s2#, (wild, GHC.Tuple.()) #) } } } } }) -}
3edcfffd0a5f6c0099ba7e55d3e07353
  findObject ::
    GHC.Base.String
    -> GHC.Base.String
    -> Graphics.UI.Fungen.Game.IOGame
         t s u v (Graphics.UI.Fungen.Objects.GameObject s)
  {- Arity: 4,
     Strictness: <L,U><L,U><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.findObject1
                  `cast`
                (forall t s u v.
                 <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           Graphics.UI.Fungen.Objects.GameObject s)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R
                                    <s>_R
                                    <u>_R
                                    <v>_R
                                    <Graphics.UI.Fungen.Objects.GameObject s>_R))) -}
5f4bbd51cb8ac6d32a3544c03e6b3806
  findObject1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v,
           Graphics.UI.Fungen.Objects.GameObject s) #)
  {- Arity: 4,
     Strictness: <L,U><L,U><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   objName :: GHC.Base.String
                   mngName :: GHC.Base.String
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case eta of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds3
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        var#
                        eta1 of ds10 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (wild,
                     case Graphics.UI.Fungen.Objects.$wsearchObjectManager
                            @ s
                            mngName
                            ipv1 of ww { (#,,#) ww1 ww2 ww3 ->
                     Graphics.UI.Fungen.Objects.searchGameObjectAux
                       @ s
                       objName
                       ww3 }) #) } } }) -}
4860c21c752622cbb7b499abee9bb990
  findObjectManager ::
    GHC.Base.String
    -> Graphics.UI.Fungen.Game.IOGame
         t s u v (Graphics.UI.Fungen.Objects.ObjectManager s)
  {- Arity: 3,
     Strictness: <L,U><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.findObjectManager1
                  `cast`
                (forall t s u v.
                 <GHC.Base.String>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           Graphics.UI.Fungen.Objects.ObjectManager s)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R
                                    <s>_R
                                    <u>_R
                                    <v>_R
                                    <Graphics.UI.Fungen.Objects.ObjectManager s>_R))) -}
3d13bf577fc91770a44f82c81778085b
  findObjectManager1 ::
    GHC.Base.String
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v,
           Graphics.UI.Fungen.Objects.ObjectManager s) #)
  {- Arity: 3,
     Strictness: <L,U><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   mngName :: GHC.Base.String
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   s1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case eta of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds3
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        var#
                        s1 of ds10 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (wild,
                     Graphics.UI.Fungen.Objects.searchObjectManager
                       @ s
                       mngName
                       ipv1) #) } } }) -}
af9b7fbfc4db8cbb4cb42bec8fed868f
  fpsInfo ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.IORef.IORef (GHC.Types.Int, GHC.Types.Int, GHC.Types.Float)
  RecSel Graphics.UI.Fungen.Game.Game
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ t @ s @ u @ v ds :: Graphics.UI.Fungen.Game.Game t s u v ->
                 case ds of wild { Graphics.UI.Fungen.Game.Game ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds10 }) -}
60fd0523d0e7b67d9c85d6b821e117eb
  gameAttribute ::
    Graphics.UI.Fungen.Game.Game t s u v -> GHC.IORef.IORef t
  RecSel Graphics.UI.Fungen.Game.Game
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLL),1*U(A,A,A,A,A,A,A,1*U(U),A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ t @ s @ u @ v ds :: Graphics.UI.Fungen.Game.Game t s u v ->
                 case ds of wild { Graphics.UI.Fungen.Game.Game ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds8 }) -}
fff6ba2d666ef930eab6fa8607627059
  gameFlags ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.IORef.IORef Graphics.UI.Fungen.Game.GameFlags
  RecSel Graphics.UI.Fungen.Game.Game
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(A,A,1*U(U),A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ t @ s @ u @ v ds :: Graphics.UI.Fungen.Game.Game t s u v ->
                 case ds of wild { Graphics.UI.Fungen.Game.Game ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds3 }) -}
2a6d6023d12df7dc04c0ace2b206ff9e
  gameMap ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.IORef.IORef (Graphics.UI.Fungen.Map.GameMap v)
  RecSel Graphics.UI.Fungen.Game.Game
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(1*U(U),A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ t @ s @ u @ v ds :: Graphics.UI.Fungen.Game.Game t s u v ->
                 case ds of wild { Graphics.UI.Fungen.Game.Game ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds1 }) -}
d7c889c30514aae8f304e29d059b0be0
  gameState ::
    Graphics.UI.Fungen.Game.Game t s u v -> GHC.IORef.IORef u
  RecSel Graphics.UI.Fungen.Game.Game
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ t @ s @ u @ v ds :: Graphics.UI.Fungen.Game.Game t s u v ->
                 case ds of wild { Graphics.UI.Fungen.Game.Game ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds2 }) -}
e78417d0345bb0217b0554c7f722bb34
  getGameAttribute :: Graphics.UI.Fungen.Game.IOGame t s u v t
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLL),1*U(U,U,U,U,U,U,U,U(U),U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.getGameAttribute1
                  `cast`
                (forall t s u v.
                 Trans
                     (<Graphics.UI.Fungen.Game.Game t s u v>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <(Graphics.UI.Fungen.Game.Game t s u v, t)>_R))
                     (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                               <t>_R <s>_R <u>_R <v>_R <t>_R))) -}
aa2c20ab6c388b80dcfbc816a5561111
  getGameAttribute1 ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, t) #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLL),1*U(U,U,U,U,U,U,U,U(U),U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   game :: Graphics.UI.Fungen.Game.Game t s u v
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case game of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds7
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <t>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ t
                        var#
                        eta of ds10 { (#,#) ipv ipv1 ->
                 (# ipv, (wild, ipv1) #) } } }) -}
3e6d4473ddeaf257e34b58f3d49133c2
  getGameFlags ::
    Graphics.UI.Fungen.Game.IOGame
      t s u v Graphics.UI.Fungen.Game.GameFlags
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.getGameFlags1
                  `cast`
                (forall t s u v.
                 Trans
                     (<Graphics.UI.Fungen.Game.Game t s u v>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <(Graphics.UI.Fungen.Game.Game t s u v,
                                      Graphics.UI.Fungen.Game.GameFlags)>_R))
                     (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                               <t>_R <s>_R <u>_R <v>_R <Graphics.UI.Fungen.Game.GameFlags>_R))) -}
e8d79c43bb80bb0a580ffe829961b0f1
  getGameFlags1 ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v,
           Graphics.UI.Fungen.Game.GameFlags) #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   game :: Graphics.UI.Fungen.Game.Game t s u v
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case game of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds2
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <Graphics.UI.Fungen.Game.GameFlags>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Graphics.UI.Fungen.Game.GameFlags
                        var#
                        eta of ds10 { (#,#) ipv ipv1 ->
                 (# ipv, (wild, ipv1) #) } } }) -}
27cdbcd6740e558d3cc69511bd891881
  getGameState :: Graphics.UI.Fungen.Game.IOGame t s u v u
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLL),1*U(U,U(U),U,U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.getGameState1
                  `cast`
                (forall t s u v.
                 Trans
                     (<Graphics.UI.Fungen.Game.Game t s u v>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <(Graphics.UI.Fungen.Game.Game t s u v, u)>_R))
                     (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                               <t>_R <s>_R <u>_R <v>_R <u>_R))) -}
f3a92b810304d3e74ff749ec29ff86f2
  getGameState1 ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, u) #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLL),1*U(U,U(U),U,U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   game :: Graphics.UI.Fungen.Game.Game t s u v
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case game of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds1
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <u>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ u
                        var#
                        eta of ds10 { (#,#) ipv ipv1 ->
                 (# ipv, (wild, ipv1) #) } } }) -}
9cbb60b41ea3dab7d3db58a797832437
  getObjectAsleep ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.getObjectAsleep1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           GHC.Types.Bool)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Types.Bool>_R))) -}
8813a049bb98bfa1fe296df3f4993e03
  getObjectAsleep1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   o :: Graphics.UI.Fungen.Objects.GameObject s
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case eta of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds3
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        var#
                        eta1 of ds10 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (wild,
                     case o of wild2 { Graphics.UI.Fungen.Objects.GO ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ->
                     case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                            @ s
                            ds11
                            ds13
                            ipv1 of ww { (#,,,,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                     ww5 } }) #) } } }) -}
0575a1cd818c97a6081476fc1bed2662
  getObjectAttribute ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v s
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.getObjectAttribute1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, s)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <s>_R))) -}
d93f52d713f85f20268803b1ac8b30fa
  getObjectAttribute1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, s) #)
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   o :: Graphics.UI.Fungen.Objects.GameObject s
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case eta of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds3
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        var#
                        eta1 of ds10 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (wild,
                     case o of wild2 { Graphics.UI.Fungen.Objects.GO ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ->
                     case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                            @ s
                            ds11
                            ds13
                            ipv1 of ww { (#,,,,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                     ww9 } }) #) } } }) -}
7d7c953d78f0d0f30570f7633b48207e
  getObjectGroupName ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Base.String
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.getObjectGroupName1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           GHC.Base.String)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Base.String>_R))) -}
73e0ab6070ddf91a90015c47aa5d8a63
  getObjectGroupName1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Base.String) #)
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   o :: Graphics.UI.Fungen.Objects.GameObject s
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case eta of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds3
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        var#
                        eta1 of ds10 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (wild,
                     case o of wild2 { Graphics.UI.Fungen.Objects.GO ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ->
                     case Graphics.UI.Fungen.Objects.$wfindObjectFromIdAux
                            @ s
                            ds11
                            ds13
                            ipv1 of ww { (#,,,,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                     ww3 } }) #) } } }) -}
f0896952a91209d501a542d8bf324a9c
  getObjectManagers ::
    Graphics.UI.Fungen.Game.IOGame
      t s u v [Graphics.UI.Fungen.Objects.ObjectManager s]
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.getObjectManagers1
                  `cast`
                (forall t s u v.
                 Trans
                     (<Graphics.UI.Fungen.Game.Game t s u v>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <(Graphics.UI.Fungen.Game.Game t s u v,
                                      [Graphics.UI.Fungen.Objects.ObjectManager s])>_R))
                     (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                               <t>_R
                               <s>_R
                               <u>_R
                               <v>_R
                               <[Graphics.UI.Fungen.Objects.ObjectManager s]>_R))) -}
4a01da05876cd44aedfaec8dec1deb61
  getObjectManagers1 ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v,
           [Graphics.UI.Fungen.Objects.ObjectManager s]) #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   game :: Graphics.UI.Fungen.Game.Game t s u v
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case game of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds3
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        var#
                        eta of ds10 { (#,#) ipv ipv1 ->
                 (# ipv, (wild, ipv1) #) } } }) -}
3fdb9f1bbabaf1ac75f60c8da763baf5
  getObjectName ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Base.String
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(A,1*U,A,A,A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.getObjectName1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           GHC.Base.String)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Base.String>_R))) -}
516287e7da4bb28fa38ea7d4bb8b03b2
  getObjectName1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Base.String) #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(A,1*U,A,A,A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   o :: Graphics.UI.Fungen.Objects.GameObject s
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta1,
                    (eta,
                     case o of wild { Graphics.UI.Fungen.Objects.GO ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                     ds2 }) #)) -}
90b20865977df41a8b6bb7c186f4db6f
  getObjectPosition ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame
         t s u v (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.getObjectPosition1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           (Graphics.GL.Types.GLdouble,
                                            Graphics.GL.Types.GLdouble))>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R
                                    <s>_R
                                    <u>_R
                                    <v>_R
                                    <(Graphics.GL.Types.GLdouble,
                                      Graphics.GL.Types.GLdouble)>_R))) -}
f7f88a60c5126a1a0b05a636bb260ed2
  getObjectPosition1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v,
           (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)) #)
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Game.Game t s u v
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w1 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa3
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   ww1
                   ww2
                   ww3
                   ww12
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w2 } }) -}
6276da68a92ae3e089cb794a98ac338f
  getObjectSize ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame
         t s u v (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.getObjectSize1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           (Graphics.GL.Types.GLdouble,
                                            Graphics.GL.Types.GLdouble))>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R
                                    <s>_R
                                    <u>_R
                                    <v>_R
                                    <(Graphics.GL.Types.GLdouble,
                                      Graphics.GL.Types.GLdouble)>_R))) -}
2ff4ccaf433436cf51bc94fd5ceee52e
  getObjectSize1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v,
           (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)) #)
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Game.Game t s u v
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w1 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa4
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   ww1
                   ww2
                   ww3
                   ww12
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w2 } }) -}
7f3d6405f20ab396d6819ad1bd631fc5
  getObjectSpeed ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame
         t s u v (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.getObjectSpeed1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           (Graphics.GL.Types.GLdouble,
                                            Graphics.GL.Types.GLdouble))>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R
                                    <s>_R
                                    <u>_R
                                    <v>_R
                                    <(Graphics.GL.Types.GLdouble,
                                      Graphics.GL.Types.GLdouble)>_R))) -}
681e944e61fd328fa7f48190f096e58f
  getObjectSpeed1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v,
           (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)) #)
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Game.Game t s u v
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w1 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa5
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   ww1
                   ww2
                   ww3
                   ww12
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w2 } }) -}
c814d73db39391ac73abff40829f1c1b
  getObjectsFromGroup ::
    GHC.Base.String
    -> Graphics.UI.Fungen.Game.IOGame
         t s u v [Graphics.UI.Fungen.Objects.GameObject s]
  {- Arity: 3,
     Strictness: <L,U><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.getObjectsFromGroup1
                  `cast`
                (forall t s u v.
                 <GHC.Base.String>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           [Graphics.UI.Fungen.Objects.GameObject s])>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R
                                    <s>_R
                                    <u>_R
                                    <v>_R
                                    <[Graphics.UI.Fungen.Objects.GameObject s]>_R))) -}
5500d5767be82464f2f7f744aaf1e033
  getObjectsFromGroup1 ::
    GHC.Base.String
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v,
           [Graphics.UI.Fungen.Objects.GameObject s]) #)
  {- Arity: 3,
     Strictness: <L,U><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   mngName :: GHC.Base.String
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case eta of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds3
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        var#
                        eta1 of ds10 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (wild,
                     case Graphics.UI.Fungen.Objects.$wsearchObjectManager
                            @ s
                            mngName
                            ipv1 of ww { (#,,#) ww1 ww2 ww3 ->
                     ww3 }) #) } } }) -}
7122fcd847a1cc37389a318f598c4fca
  getTileFromIndex ::
    (GHC.Types.Int, GHC.Types.Int)
    -> Graphics.UI.Fungen.Game.IOGame
         t s u v (Graphics.UI.Fungen.Map.Tile v)
  {- Arity: 3,
     Strictness: <S,1*U(1*U(U),U(U))><S(SLLLLLLLLL),1*U(U(U),U,U,U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.getTileFromIndex1
                  `cast`
                (forall t s u v.
                 <(GHC.Types.Int, GHC.Types.Int)>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           Graphics.UI.Fungen.Map.Tile v)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <Graphics.UI.Fungen.Map.Tile v>_R))) -}
aff090a6d76a1505eb510b88c66207e8
  getTileFromIndex1 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v,
           Graphics.UI.Fungen.Map.Tile v) #)
  {- Arity: 3,
     Strictness: <S,1*U(1*U(U),U(U))><S(SLLLLLLLLL),1*U(U(U),U,U,U,U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   w :: (GHC.Types.Int, GHC.Types.Int)
                   w1 :: Graphics.UI.Fungen.Game.Game t s u v
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w of ww { (,) ww1 ww2 ->
                 case w1 of ww3 { Graphics.UI.Fungen.Game.Game ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <Graphics.UI.Fungen.Map.GameMap
                                                  v>_N) of ww14 { GHC.STRef.STRef ww15 ->
                 Graphics.UI.Fungen.Game.$wa6
                   @ t
                   @ s
                   @ u
                   @ v
                   ww1
                   ww2
                   ww15
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   w2 } } }) -}
ffa3aedbe50ea708bfc4d2406ab25c36
  getTileFromIndex2 ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Graphics.UI.Fungen.Game.IOGame
         t s u v (Graphics.UI.Fungen.Map.Tile v)
  {- Arity: 2, Strictness: <L,U><L,U>b -}
f9c5cfb77b614d9a7a323a3604004b91
  getTileFromIndex3 ::
    Graphics.UI.Fungen.Game.IOGame
      t s u v (Graphics.UI.Fungen.Map.Tile v)
  {- Strictness: b -}
f858c5e6ce2a2c1a575339ae32dbab76
  getTileFromWindowPosition ::
    (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
    -> Graphics.UI.Fungen.Game.IOGame
         t s u v (Graphics.UI.Fungen.Map.Tile v)
  {- Arity: 3,
     Strictness: <S,1*U(1*U(U),1*U(U))><S(SLLLLLLLLL),1*U(U(U),U,U,U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.getTileFromWindowPosition1
                  `cast`
                (forall t s u v.
                 <(Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           Graphics.UI.Fungen.Map.Tile v)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <Graphics.UI.Fungen.Map.Tile v>_R))) -}
a90777e3c53098bc289a71b4ff1d0ab3
  getTileFromWindowPosition1 ::
    (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v,
           Graphics.UI.Fungen.Map.Tile v) #)
  {- Arity: 3,
     Strictness: <S,1*U(1*U(U),1*U(U))><S(SLLLLLLLLL),1*U(U(U),U,U,U,U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   w :: (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
                   w1 :: Graphics.UI.Fungen.Game.Game t s u v
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w of ww { (,) ww1 ww2 ->
                 case w1 of ww3 { Graphics.UI.Fungen.Game.Game ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <Graphics.UI.Fungen.Map.GameMap
                                                  v>_N) of ww14 { GHC.STRef.STRef ww15 ->
                 Graphics.UI.Fungen.Game.$wa7
                   @ t
                   @ s
                   @ u
                   @ v
                   ww1
                   ww2
                   ww15
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   w2 } } }) -}
b70774eb25301b322764ffdf5a9f3da6
  liftIOtoIOGame ::
    GHC.Types.IO a -> Graphics.UI.Fungen.Game.IOGame t s u v a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U(U,U))><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.liftIOtoIOGame1
                  `cast`
                (forall a t s u v.
                 <GHC.Types.IO a>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, a)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <a>_R))) -}
dbccaa8420a7c509ad8d4b8e2550ac69
  liftIOtoIOGame' ::
    (a -> GHC.Types.IO ())
    -> a -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*C1(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a @ t @ s @ u @ v p :: a -> GHC.Types.IO () q :: a ->
                 let {
                   lvl9 :: GHC.Types.IO () = p q
                 } in
                 (\ s1 :: Graphics.UI.Fungen.Game.Game t s u v
                    s2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case lvl9 `cast` (GHC.Types.NTCo:IO[0] <()>_R)
                         s2 of ds1 { (#,#) ipv ipv1 ->
                  (# ipv, (s1, GHC.Tuple.()) #) })
                   `cast`
                 (Trans
                      (<Graphics.UI.Fungen.Game.Game t s u v>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                      (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                <t>_R <s>_R <u>_R <v>_R <()>_R)))) -}
57e55ca2a3c40668cfae144d6ef6d93c
  liftIOtoIOGame1 ::
    GHC.Types.IO a
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, a) #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U(U,U))><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ t
                   @ s
                   @ u
                   @ v
                   p :: GHC.Types.IO a
                   s1 :: Graphics.UI.Fungen.Game.Game t s u v
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case p `cast` (GHC.Types.NTCo:IO[0] <a>_R)
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (s1, ipv1) #) }) -}
b6b5f01ff1213e71e9a2f6d59de173bf
  moveAllObjects :: Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.moveAllObjects1
                  `cast`
                (forall t s u v.
                 Trans
                     (<Graphics.UI.Fungen.Game.Game t s u v>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                     (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                               <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
6640cb58c76411bd976ca85e06607ea1
  moveAllObjects1 ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   s1 :: Graphics.UI.Fungen.Game.Game t s u v
                   s2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case s1 of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds3
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        var#
                        s2 of ds10 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        var#
                        (Graphics.UI.Fungen.Objects.moveGameObjects @ s ipv1)
                        ipv of s2# { DEFAULT ->
                 (# s2#, (wild, GHC.Tuple.()) #) } } } }) -}
235073ca5b21dc83575c2ed2a7ba5e23
  objManagers ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Objects.ObjectManager s]
  RecSel Graphics.UI.Fungen.Game.Game
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLL),1*U(A,A,A,1*U(U),A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ t @ s @ u @ v ds :: Graphics.UI.Fungen.Game.Game t s u v ->
                 case ds of wild { Graphics.UI.Fungen.Game.Game ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds4 }) -}
88b35e2a97ef32850634b9c341b9c06e
  objectBottomMapCollision ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.objectBottomMapCollision1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           GHC.Types.Bool)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Types.Bool>_R))) -}
7862ce60b515a1c05a211395dc3d5500
  objectBottomMapCollision1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Game.Game t s u v
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w1 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa8
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   ww1
                   ww2
                   ww3
                   ww12
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w2 } }) -}
39a7b62690a6c0c863901f9789f29529
  objectBottomMapFutureCollision ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.objectBottomMapFutureCollision1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           GHC.Types.Bool)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Types.Bool>_R))) -}
bd7b952e3b952091223d11bf6b3d076b
  objectBottomMapFutureCollision1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Game.Game t s u v
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w1 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa9
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   ww1
                   ww2
                   ww3
                   ww12
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w2 } }) -}
07dff20b3fee63da83c82c242db388be
  objectLeftMapCollision ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.objectLeftMapCollision1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           GHC.Types.Bool)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Types.Bool>_R))) -}
bac1b8871737271203e5fdd642b71b25
  objectLeftMapCollision1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Game.Game t s u v
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w1 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa10
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   ww1
                   ww2
                   ww3
                   ww12
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w2 } }) -}
6bb0210b5695afed75c6b5f666b0e1a0
  objectLeftMapFutureCollision ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.objectLeftMapFutureCollision1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           GHC.Types.Bool)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Types.Bool>_R))) -}
bfba70774a1112011a4038eb01c7b7b5
  objectLeftMapFutureCollision1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Game.Game t s u v
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w1 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa11
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   ww1
                   ww2
                   ww3
                   ww12
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w2 } }) -}
b053e568f1bc4a68aac7a5fe750b2d3b
  objectListObjectCollision ::
    [Graphics.UI.Fungen.Objects.GameObject s]
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Types.Bool
  {- Arity: 4,
     Strictness: <S,1*U><L,U(U,A,U,A,A,A,A,A,A)><L,U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.objectListObjectCollision1
                  `cast`
                (forall s t u v.
                 <[Graphics.UI.Fungen.Objects.GameObject s]>_R
                 ->_R <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           GHC.Types.Bool)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Types.Bool>_R))) -}
e46dc045e75179de6b6614878ba2d8eb
  objectListObjectCollision1 ::
    [Graphics.UI.Fungen.Objects.GameObject s]
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 4,
     Strictness: <S,1*U><L,U(U,A,U,A,A,A,A,A,A)><L,U(U,U,U,U(U),U,U,U,U,U,U)><L,U> -}
21dfeab4f587f4c9c5fd65cf07ac9702
  objectListObjectFutureCollision ::
    [Graphics.UI.Fungen.Objects.GameObject s]
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Types.Bool
  {- Arity: 4,
     Strictness: <S,1*U><L,U(U,A,U,A,A,A,A,A,A)><L,U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.objectListObjectFutureCollision1
                  `cast`
                (forall s t u v.
                 <[Graphics.UI.Fungen.Objects.GameObject s]>_R
                 ->_R <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           GHC.Types.Bool)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Types.Bool>_R))) -}
36f2b629923c8ea8a4f45ab42089cdda
  objectListObjectFutureCollision1 ::
    [Graphics.UI.Fungen.Objects.GameObject s]
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 4,
     Strictness: <S,1*U><L,U(U,A,U,A,A,A,A,A,A)><L,U(U,U,U,U(U),U,U,U,U,U,U)><L,U> -}
f307e14cacfeef290a9597d6206a0bae
  objectRightMapCollision ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U(U),U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.objectRightMapCollision1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           GHC.Types.Bool)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Types.Bool>_R))) -}
056b279805b125268cc49f499f3595ce
  objectRightMapCollision1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U(U),U,U,U(U),U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Game.Game t s u v
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w1 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa12
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   ww1
                   ww2
                   ww3
                   ww12
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w2 } }) -}
bf9cb9dbfcbf1c502b5adcbf3b79442a
  objectRightMapFutureCollision ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U(U),U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.objectRightMapFutureCollision1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           GHC.Types.Bool)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Types.Bool>_R))) -}
35606669d21ec41eee573230919366d8
  objectRightMapFutureCollision1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U(U),U,U,U(U),U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Game.Game t s u v
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w1 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa13
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   ww1
                   ww2
                   ww3
                   ww12
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w2 } }) -}
f0645b0a9dcf0ecedb124b1b6b5675a7
  objectTopMapCollision ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U(U),U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.objectTopMapCollision1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           GHC.Types.Bool)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Types.Bool>_R))) -}
6ca73dc3100bc9d2417ab85a5d40f4f1
  objectTopMapCollision1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U(U),U,U,U(U),U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Game.Game t s u v
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w1 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa14
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   ww1
                   ww2
                   ww3
                   ww12
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w2 } }) -}
6d1cef64d6cacad51848bc80c68be06a
  objectTopMapFutureCollision ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U(U),U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.objectTopMapFutureCollision1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           GHC.Types.Bool)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Types.Bool>_R))) -}
1213edc8e2de0b23fa7fa1a5b52b2112
  objectTopMapFutureCollision1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 3,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U(U),U,U,U(U),U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Game.Game t s u v
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w1 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa15
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   ww1
                   ww2
                   ww3
                   ww12
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w2 } }) -}
48862fbe91d0964be55ea3d10fdd55ee
  objectsCollision ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Types.Bool
  {- Arity: 4,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.objectsCollision1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           GHC.Types.Bool)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Types.Bool>_R))) -}
49ef08a115481f80d2993569d5a40590
  objectsCollision1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 4,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Objects.GameObject s
                   w2 :: Graphics.UI.Fungen.Game.Game t s u v
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w2 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa16
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww12
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w3 } }) -}
d8b4ee751671c69d5d477a9405a59e27
  objectsFutureCollision ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Types.Bool
  {- Arity: 4,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.objectsFutureCollision1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           GHC.Types.Bool)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Types.Bool>_R))) -}
9de2f9c4e93c2ba5f7ce320877140a22
  objectsFutureCollision1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 4,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Objects.GameObject s
                   w2 :: Graphics.UI.Fungen.Game.Game t s u v
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w2 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa17
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww12
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w3 } }) -}
17b848b299398559aea8ab1ba24beee7
  pictureList ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.IORef.IORef
         [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
  RecSel Graphics.UI.Fungen.Game.Game
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,1*U(U),A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ t @ s @ u @ v ds :: Graphics.UI.Fungen.Game.Game t s u v ->
                 case ds of wild { Graphics.UI.Fungen.Game.Game ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds9 }) -}
920066d3f237a95d77d8d157ac938640
  pointsObjectCollision ::
    Graphics.GL.Types.GLdouble
    -> Graphics.GL.Types.GLdouble
    -> Graphics.GL.Types.GLdouble
    -> Graphics.GL.Types.GLdouble
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Types.Bool
  {- Arity: 7,
     Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.pointsObjectCollision1
                  `cast`
                (forall s t u v.
                 <Graphics.GL.Types.GLdouble>_R
                 ->_R <Graphics.GL.Types.GLdouble>_R
                 ->_R <Graphics.GL.Types.GLdouble>_R
                 ->_R <Graphics.GL.Types.GLdouble>_R
                 ->_R <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           GHC.Types.Bool)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Types.Bool>_R))) -}
427c8fd682ea1d36ad49a88f4e97c2ad
  pointsObjectCollision1 ::
    Graphics.GL.Types.GLdouble
    -> Graphics.GL.Types.GLdouble
    -> Graphics.GL.Types.GLdouble
    -> Graphics.GL.Types.GLdouble
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 7,
     Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (7, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.GL.Types.GLdouble
                   w1 :: Graphics.GL.Types.GLdouble
                   w2 :: Graphics.GL.Types.GLdouble
                   w3 :: Graphics.GL.Types.GLdouble
                   w4 :: Graphics.UI.Fungen.Objects.GameObject s
                   w5 :: Graphics.UI.Fungen.Game.Game t s u v
                   w6 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w5 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa18
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   w1
                   w2
                   w3
                   w4
                   ww1
                   ww2
                   ww3
                   ww12
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w6 } }) -}
2ea9452925b3f2b149eebc73121ebb12
  pointsObjectListCollision ::
    Graphics.GL.Types.GLdouble
    -> Graphics.GL.Types.GLdouble
    -> Graphics.GL.Types.GLdouble
    -> Graphics.GL.Types.GLdouble
    -> [Graphics.UI.Fungen.Objects.GameObject s]
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Types.Bool
  {- Arity: 7,
     Strictness: <L,U(U)><L,U(U)><L,U(U)><L,U(U)><S,1*U><L,U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.pointsObjectListCollision1
                  `cast`
                (forall s t u v.
                 <Graphics.GL.Types.GLdouble>_R
                 ->_R <Graphics.GL.Types.GLdouble>_R
                 ->_R <Graphics.GL.Types.GLdouble>_R
                 ->_R <Graphics.GL.Types.GLdouble>_R
                 ->_R <[Graphics.UI.Fungen.Objects.GameObject s]>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           GHC.Types.Bool)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Types.Bool>_R))) -}
349bf3c845d83bc11b7084755fe772ef
  pointsObjectListCollision1 ::
    Graphics.GL.Types.GLdouble
    -> Graphics.GL.Types.GLdouble
    -> Graphics.GL.Types.GLdouble
    -> Graphics.GL.Types.GLdouble
    -> [Graphics.UI.Fungen.Objects.GameObject s]
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Bool) #)
  {- Arity: 7,
     Strictness: <L,U(U)><L,U(U)><L,U(U)><L,U(U)><S,1*U><L,U(U,U,U,U(U),U,U,U,U,U,U)><L,U> -}
6fb4f88023c8428fcd24eb3af3415cd2
  printOnPrompt ::
    GHC.Show.Show a => a -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 4, Strictness: <L,1*U(A,1*C1(U),A)><L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.printOnPrompt1
                  `cast`
                (forall a t s u v.
                 <GHC.Show.Show a>_R
                 ->_R <a>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
14531ebdf61d913f34abc6607fbcf512
  printOnPrompt1 ::
    GHC.Show.Show a =>
    a
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 4, Strictness: <L,1*U(A,1*C1(U),A)><L,U><L,U><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   @ t
                   @ s
                   @ u
                   @ v
                   $dShow :: GHC.Show.Show a
                   a1 :: a
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Show.show @ a $dShow a1)
                        GHC.Types.True
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (eta, GHC.Tuple.()) #) }) -}
027e2e05ca2e5a0c2ce570753a471ffe
  printOnScreen ::
    GHC.Base.String
    -> Graphics.UI.GLUT.Raw.Fonts.BitmapFont
    -> (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
    -> Graphics.GL.Types.GLclampf
    -> Graphics.GL.Types.GLclampf
    -> Graphics.GL.Types.GLclampf
    -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 8, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><S(LLLLSLLLLL),1*U(U,U,U,U,U(U),U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.printOnScreen1
                  `cast`
                (forall t s u v.
                 <GHC.Base.String>_R
                 ->_R <Graphics.UI.GLUT.Raw.Fonts.BitmapFont>_R
                 ->_R <(Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)>_R
                 ->_R <Graphics.GL.Types.GLclampf>_R
                 ->_R <Graphics.GL.Types.GLclampf>_R
                 ->_R <Graphics.GL.Types.GLclampf>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
6585a49413304259d0ad3c1d18ccbdc3
  printOnScreen1 ::
    GHC.Base.String
    -> Graphics.UI.GLUT.Raw.Fonts.BitmapFont
    -> (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
    -> Graphics.GL.Types.GLclampf
    -> Graphics.GL.Types.GLclampf
    -> Graphics.GL.Types.GLclampf
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 8, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><S(LLLLSLLLLL),1*U(U,U,U,U,U(U),U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (8, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   text :: GHC.Base.String
                   font :: Graphics.UI.GLUT.Raw.Fonts.BitmapFont
                   pos :: (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
                   r :: Graphics.GL.Types.GLclampf
                   g :: Graphics.GL.Types.GLclampf
                   b :: Graphics.GL.Types.GLclampf
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case eta of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Text.Text]>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Text.Text]
                        var#
                        eta1 of ds10 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Text.Text]
                        var#
                        (GHC.Types.:
                           @ (GHC.Base.String,
                              Graphics.UI.GLUT.Raw.Fonts.BitmapFont,
                              Graphics.UI.Fungen.Types.Point2D,
                              Graphics.GL.Types.GLclampf,
                              Graphics.GL.Types.GLclampf,
                              Graphics.GL.Types.GLclampf)
                           (text, font, pos, r, g, b)
                           ipv1)
                        ipv of s2# { DEFAULT ->
                 (# s2#, (wild, GHC.Tuple.()) #) } } } }) -}
dd28f8e28f81769452822b2ca42f900c
  printText :: Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 2,
     Strictness: <S(LLLLSLLLLL),1*U(U,U,U,U,U(U),U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.printText1
                  `cast`
                (forall t s u v.
                 Trans
                     (<Graphics.UI.Fungen.Game.Game t s u v>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                     (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                               <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
798999ec69b71a498d29a7e86f30e855
  printText1 ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 2,
     Strictness: <S(LLLLSLLLLL),1*U(U,U,U,U,U(U),U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   s1 :: Graphics.UI.Fungen.Game.Game t s u v
                   s2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case s1 of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Text.Text]>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Text.Text]
                        var#
                        s2 of ds10 { (#,#) ipv ipv1 ->
                 case Graphics.UI.Fungen.Text.putGameText1
                        ipv1
                        ipv of ds11 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Text.Text]
                        var#
                        (GHC.Types.[] @ Graphics.UI.Fungen.Text.Text)
                        ipv2 of s2# { DEFAULT ->
                 (# s2#, (wild, GHC.Tuple.()) #) } } } } }) -}
6981d659adfe7db771ef11f11a6e53f2
  quadricObj ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> Graphics.Rendering.OpenGL.GLU.Quadrics.QuadricPrimitive
  RecSel Graphics.UI.Fungen.Game.Game
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ t @ s @ u @ v ds :: Graphics.UI.Fungen.Game.Game t s u v ->
                 case ds of wild { Graphics.UI.Fungen.Game.Game ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds6 }) -}
f90bc119f9a80d4353481f91072fe513
  randomDouble ::
    (GHC.Types.Double, GHC.Types.Double)
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Types.Double
  {- Arity: 3, Strictness: <S,1*U(U(U),U(U))><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.randomDouble1
                  `cast`
                (forall t s u v.
                 <(GHC.Types.Double, GHC.Types.Double)>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           GHC.Types.Double)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Types.Double>_R))) -}
3191014e36eec668a4eed8e649e9af8e
  randomDouble1 ::
    (GHC.Types.Double, GHC.Types.Double)
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Double) #)
  {- Arity: 3, Strictness: <S,1*U(U(U),U(U))><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   ds :: (GHC.Types.Double, GHC.Types.Double)
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds of wild { (,) x y ->
                 case System.Random.$fRandomDouble5
                        (x, y)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (eta, ipv1) #) } }) -}
6be7835f7382038e2756f5847abc2370
  randomFloat ::
    (GHC.Types.Float, GHC.Types.Float)
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Types.Float
  {- Arity: 3, Strictness: <S,1*U(U(U),U(U))><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.randomFloat1
                  `cast`
                (forall t s u v.
                 <(GHC.Types.Float, GHC.Types.Float)>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v,
                                           GHC.Types.Float)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Types.Float>_R))) -}
4bd2e37b0deea546c7bb0ec8617f2139
  randomFloat1 ::
    (GHC.Types.Float, GHC.Types.Float)
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Float) #)
  {- Arity: 3, Strictness: <S,1*U(U(U),U(U))><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   ds :: (GHC.Types.Float, GHC.Types.Float)
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds of wild { (,) x y ->
                 case System.Random.$fRandomFloat3
                        (x, y)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (eta, ipv1) #) } }) -}
e5164476faf48fea726f1317b49bacb5
  randomInt ::
    (GHC.Types.Int, GHC.Types.Int)
    -> Graphics.UI.Fungen.Game.IOGame t s u v GHC.Types.Int
  {- Arity: 3, Strictness: <S,1*U(1*U(U),1*U(U))><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.randomInt1
                  `cast`
                (forall t s u v.
                 <(GHC.Types.Int, GHC.Types.Int)>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Int)>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <GHC.Types.Int>_R))) -}
38b78bed5e06433c792e16762dd715cf
  randomInt1 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, GHC.Types.Int) #)
  {- Arity: 3, Strictness: <S,1*U(1*U(U),1*U(U))><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   ds :: (GHC.Types.Int, GHC.Types.Int)
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds of wild { (,) x y ->
                 case System.Random.$fRandomInt3
                        (x, y)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (eta, ipv1) #) } }) -}
5f3d414a98c07042881adcd82d892f9f
  replaceObject ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> (Graphics.UI.Fungen.Objects.GameObject s
        -> Graphics.UI.Fungen.Objects.GameObject s)
    -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 4,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,1*C1(U)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.replaceObject1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R <Graphics.UI.Fungen.Objects.GameObject s
                       -> Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
556d344292e16683ff0d33ac6f19e464
  replaceObject1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> (Graphics.UI.Fungen.Objects.GameObject s
        -> Graphics.UI.Fungen.Objects.GameObject s)
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 4,
     Strictness: <L,1*U(U,A,U,A,A,A,A,A,A)><L,1*C1(U)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Objects.GameObject s
                         -> Graphics.UI.Fungen.Objects.GameObject s
                   w2 :: Graphics.UI.Fungen.Game.Game t s u v
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w2 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa19
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww12
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w3 } }) -}
7aca16b915bb02cc21b7d80f3fb2c756
  reverseXSpeed ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 3,
     Strictness: <L,U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.reverseXSpeed1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
4b0a854f2e4be2f54bc51041a12e7a22
  reverseXSpeed1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 3,
     Strictness: <L,U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Game.Game t s u v
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w1 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa20
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   ww1
                   ww2
                   ww3
                   ww12
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w2 } }) -}
20bff03dd8ec959564e9dae9b7769673
  reverseYSpeed ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 3,
     Strictness: <L,U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.reverseYSpeed1
                  `cast`
                (forall s t u v.
                 <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
163157786935d08f885b03a0d2093b9e
  reverseYSpeed1 ::
    Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 3,
     Strictness: <L,U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: Graphics.UI.Fungen.Objects.GameObject s
                   w1 :: Graphics.UI.Fungen.Game.Game t s u v
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w1 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww4
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa21
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   ww1
                   ww2
                   ww3
                   ww12
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w2 } }) -}
ec722d89af5407040ea2a7e73ab7792b
  runIOGame ::
    Graphics.UI.Fungen.Game.IOGame t s u v a
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Types.IO (Graphics.UI.Fungen.Game.Game t s u v, a)
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,U>,
     Unfolding: InlineRule (2, True, True)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   @ a
                   ds :: Graphics.UI.Fungen.Game.IOGame t s u v a
                   g :: Graphics.UI.Fungen.Game.Game t s u v ->
                 ds
                   `cast`
                 (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                      <t>_R <s>_R <u>_R <v>_R <a>_R)
                   g) -}
ce39882368142e5fdb4a00f10a3529ed
  runIOGameM ::
    Graphics.UI.Fungen.Game.IOGame t s u v a
    -> Graphics.UI.Fungen.Game.Game t s u v -> GHC.Types.IO ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U(U,A)))><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.runIOGameM1
                  `cast`
                (forall t s u v a.
                 <Graphics.UI.Fungen.Game.IOGame t s u v a>_R
                 ->_R <Graphics.UI.Fungen.Game.Game t s u v>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
0aca0595e5e0d4d46edabdc7e30b279a
  runIOGameM1 ::
    Graphics.UI.Fungen.Game.IOGame t s u v a
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U(U,A)))><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   @ a
                   x :: Graphics.UI.Fungen.Game.IOGame t s u v a
                   g :: Graphics.UI.Fungen.Game.Game t s u v
                   s1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (x `cast`
                       (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                            <t>_R <s>_R <u>_R <v>_R <a>_R)
                         g)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Graphics.UI.Fungen.Game.Game t s u v, a)>_R)
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Tuple.() #) }) -}
ef659dc77384b3e4fe90e570ecbbd73e
  setCurrentMapIndex ::
    GHC.Types.Int -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 3,
     Strictness: <L,1*U(U)><S(SLLLLLLLLL),1*U(U(U),U,U,U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.setCurrentMapIndex1
                  `cast`
                (forall t s u v.
                 <GHC.Types.Int>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
730a484e65f18c4132bbd53426cd4f84
  setCurrentMapIndex1 ::
    GHC.Types.Int
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 3,
     Strictness: <L,1*U(U)><S(SLLLLLLLLL),1*U(U(U),U,U,U,U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   w :: GHC.Types.Int
                   w1 :: Graphics.UI.Fungen.Game.Game t s u v
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w1 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww1
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <Graphics.UI.Fungen.Map.GameMap
                                                  v>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa22
                   @ t
                   @ s
                   @ u
                   @ v
                   w
                   ww12
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w2 } }) -}
8a413160696703e400299edce48e72f6
  setCurrentMapIndex2 :: Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Strictness: b -}
00147441a077658ce5ea30ff1eceb551
  setGameAttribute :: t -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U><S(LLLLLLLSLL),1*U(U,U,U,U,U,U,U,U(U),U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.setGameAttribute1
                  `cast`
                (forall t s u v.
                 <t>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
c5347c92ea3aa882a575f0f394e0d00c
  setGameAttribute1 ::
    t
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U><S(LLLLLLLSLL),1*U(U,U,U,U,U,U,U,U(U),U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   ga :: t
                   game :: Graphics.UI.Fungen.Game.Game t s u v
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case game of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds7
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <t>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ t
                        var#
                        ga
                        eta of s2# { DEFAULT ->
                 (# s2#, (wild, GHC.Tuple.()) #) } } }) -}
baf1fbf2c4a5f4d5ad87d25161f59048
  setGameFlags ::
    Graphics.UI.Fungen.Game.GameFlags
    -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U><S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.setGameFlags1
                  `cast`
                (forall t s u v.
                 <Graphics.UI.Fungen.Game.GameFlags>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
c292e2aada9ad7aa4468b760ac1cb53d
  setGameFlags1 ::
    Graphics.UI.Fungen.Game.GameFlags
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U><S(LLSLLLLLLL),1*U(U,U,U(U),U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   f :: Graphics.UI.Fungen.Game.GameFlags
                   game :: Graphics.UI.Fungen.Game.Game t s u v
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case game of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds2
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <Graphics.UI.Fungen.Game.GameFlags>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ Graphics.UI.Fungen.Game.GameFlags
                        var#
                        f
                        eta of s2# { DEFAULT ->
                 (# s2#, (wild, GHC.Tuple.()) #) } } }) -}
dea3075dc962a0db6f9ac5410a9f5f2b
  setGameState :: u -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U><S(LSLLLLLLLL),1*U(U,U(U),U,U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.setGameState1
                  `cast`
                (forall u t s v.
                 <u>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
30b53e9365d204d375ec4526c0f54e4e
  setGameState1 ::
    u
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U><S(LSLLLLLLLL),1*U(U,U(U),U,U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ u
                   @ t
                   @ s
                   @ v
                   s1 :: u
                   game :: Graphics.UI.Fungen.Game.Game t s u v
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case game of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds1
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <u>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ u
                        var#
                        s1
                        eta of s2# { DEFAULT ->
                 (# s2#, (wild, GHC.Tuple.()) #) } } }) -}
0acfff6f6e1e935cc8ff1d79f44f39c3
  setObjectAsleep ::
    GHC.Types.Bool
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 4,
     Strictness: <L,U><L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.setObjectAsleep1
                  `cast`
                (forall s t u v.
                 <GHC.Types.Bool>_R
                 ->_R <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
9b071aa61893e3cbd394723821b8f3b9
  setObjectAsleep1 ::
    GHC.Types.Bool
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 4,
     Strictness: <L,U><L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   asleep :: GHC.Types.Bool
                   obj :: Graphics.UI.Fungen.Objects.GameObject s
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Graphics.UI.Fungen.Game.replaceObject1
                   @ s
                   @ t
                   @ u
                   @ v
                   obj
                   (Graphics.UI.Fungen.Objects.updateObjectAsleep @ s asleep)
                   eta
                   eta1) -}
2908c7178c5c604e362810ef276847e5
  setObjectAttribute ::
    s
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 4,
     Strictness: <L,U><L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.setObjectAttribute1
                  `cast`
                (forall s t u v.
                 <s>_R
                 ->_R <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
4c7406524d0fc18f1a97f7e446554937
  setObjectAttribute1 ::
    s
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 4,
     Strictness: <L,U><L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   a :: s
                   obj :: Graphics.UI.Fungen.Objects.GameObject s
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Graphics.UI.Fungen.Game.replaceObject1
                   @ s
                   @ t
                   @ u
                   @ v
                   obj
                   (Graphics.UI.Fungen.Objects.updateObjectAttribute @ s a)
                   eta
                   eta1) -}
44a43ac546a594600f071f75da4ca87a
  setObjectCurrentPicture ::
    GHC.Types.Int
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 4,
     Strictness: <L,1*U(U)><L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLLLLLLSL),1*U(U,U,U,U(U),U,U,U,U,U(U),U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.setObjectCurrentPicture1
                  `cast`
                (forall s t u v.
                 <GHC.Types.Int>_R
                 ->_R <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
d47ac5a5ca2ddef4b163aa11ec3a326b
  setObjectCurrentPicture1 ::
    GHC.Types.Int
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 4,
     Strictness: <L,1*U(U)><L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLLLLLLSL),1*U(U,U,U,U(U),U,U,U,U,U(U),U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   w :: GHC.Types.Int
                   w1 :: Graphics.UI.Fungen.Objects.GameObject s
                   w2 :: Graphics.UI.Fungen.Game.Game t s u v
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w2 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww9
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa23
                   @ s
                   @ t
                   @ u
                   @ v
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww12
                   ww10
                   w3 } }) -}
8aebf4daff84b8b229d45d4ef5f5142a
  setObjectManagers ::
    [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.setObjectManagers1
                  `cast`
                (forall s t u v.
                 <[Graphics.UI.Fungen.Objects.ObjectManager s]>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
4c8b8ed1a9d0cd93d31b0b015a02f6e4
  setObjectManagers1 ::
    [Graphics.UI.Fungen.Objects.ObjectManager s]
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   o :: [Graphics.UI.Fungen.Objects.ObjectManager s]
                   game :: Graphics.UI.Fungen.Game.Game t s u v
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case game of wild { Graphics.UI.Fungen.Game.Game ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                 case ds3
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Objects.ObjectManager
                                                   s]>_N) of wild1 { GHC.STRef.STRef var# ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ [Graphics.UI.Fungen.Objects.ObjectManager s]
                        var#
                        o
                        eta of s2# { DEFAULT ->
                 (# s2#, (wild, GHC.Tuple.()) #) } } }) -}
d2ce71e2653eae4c23bf519393a4a08d
  setObjectPosition ::
    (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 4,
     Strictness: <L,1*U(U,U)><L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.setObjectPosition1
                  `cast`
                (forall s t u v.
                 <(Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)>_R
                 ->_R <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
c59dab1cf45cfc6fd5d740905dc83553
  setObjectPosition1 ::
    (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 4,
     Strictness: <L,1*U(U,U)><L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   pos :: (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
                   obj :: Graphics.UI.Fungen.Objects.GameObject s
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Graphics.UI.Fungen.Game.replaceObject1
                   @ s
                   @ t
                   @ u
                   @ v
                   obj
                   (Graphics.UI.Fungen.Objects.updateObjectPosition @ s pos)
                   eta
                   eta1) -}
4d3c114238c5363c5098f1709a14a8a3
  setObjectSpeed ::
    (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 4,
     Strictness: <L,1*U(U,U)><L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.setObjectSpeed1
                  `cast`
                (forall s t u v.
                 <(Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)>_R
                 ->_R <Graphics.UI.Fungen.Objects.GameObject s>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
2826f326e918d54aae2ef5f64ca13000
  setObjectSpeed1 ::
    (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
    -> Graphics.UI.Fungen.Objects.GameObject s
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 4,
     Strictness: <L,1*U(U,U)><L,1*U(U,A,U,A,A,A,A,A,A)><S(LLLSLLLLLL),1*U(U,U,U,U(U),U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ s
                   @ t
                   @ u
                   @ v
                   speed :: (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
                   obj :: Graphics.UI.Fungen.Objects.GameObject s
                   eta :: Graphics.UI.Fungen.Game.Game t s u v
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Graphics.UI.Fungen.Game.replaceObject1
                   @ s
                   @ t
                   @ u
                   @ v
                   obj
                   (Graphics.UI.Fungen.Objects.updateObjectSpeed @ s speed)
                   eta
                   eta1) -}
a92734ad9c7f73fbbd996fe5970e0cdb
  showFPS ::
    Graphics.UI.GLUT.Raw.Fonts.BitmapFont
    -> (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
    -> Graphics.GL.Types.GLclampf
    -> Graphics.GL.Types.GLclampf
    -> Graphics.GL.Types.GLclampf
    -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 7,
     Strictness: <L,U><L,U><L,U><L,U><L,U><S(LLLLLLLLLS),1*U(U,U,U,U,U(U),U,U,U,U,U(U))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.showFPS1
                  `cast`
                (forall t s u v.
                 <Graphics.UI.GLUT.Raw.Fonts.BitmapFont>_R
                 ->_R <(Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)>_R
                 ->_R <Graphics.GL.Types.GLclampf>_R
                 ->_R <Graphics.GL.Types.GLclampf>_R
                 ->_R <Graphics.GL.Types.GLclampf>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
3b6d4624b7b7f0fc3a01a6973dc58960
  showFPS1 ::
    Graphics.UI.GLUT.Raw.Fonts.BitmapFont
    -> (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
    -> Graphics.GL.Types.GLclampf
    -> Graphics.GL.Types.GLclampf
    -> Graphics.GL.Types.GLclampf
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 7,
     Strictness: <L,U><L,U><L,U><L,U><L,U><S(LLLLLLLLLS),1*U(U,U,U,U,U(U),U,U,U,U,U(U))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (7, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   w :: Graphics.UI.GLUT.Raw.Fonts.BitmapFont
                   w1 :: (Graphics.GL.Types.GLdouble, Graphics.GL.Types.GLdouble)
                   w2 :: Graphics.GL.Types.GLclampf
                   w3 :: Graphics.GL.Types.GLclampf
                   w4 :: Graphics.GL.Types.GLclampf
                   w5 :: Graphics.UI.Fungen.Game.Game t s u v
                   w6 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w5 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww10
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <(GHC.Types.Int,
                                                 GHC.Types.Int,
                                                 GHC.Types.Float)>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa24
                   @ t
                   @ s
                   @ u
                   @ v
                   w
                   w1
                   w2
                   w3
                   w4
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww12
                   w6 } }) -}
62bdba745e863cc9639d31118068c9b3
  showFPS2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "%.1f"#) -}
548635da7411a9457778ad42e244314f
  textList ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.IORef.IORef [Graphics.UI.Fungen.Text.Text]
  RecSel Graphics.UI.Fungen.Game.Game
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLL),1*U(A,A,A,A,1*U(U),A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ t @ s @ u @ v ds :: Graphics.UI.Fungen.Game.Game t s u v ->
                 case ds of wild { Graphics.UI.Fungen.Game.Game ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds5 }) -}
544332d0805cdfa17ff4c17995b9a5ae
  wait :: GHC.Types.Int -> Graphics.UI.Fungen.Game.IOGame t s u v ()
  {- Arity: 3,
     Strictness: <L,U(U)><S(LLLLSLLLLL),1*U(U,U,U,U,U(U),U,U,U,U,U(U))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.Fungen.Game.wait1
                  `cast`
                (forall t s u v.
                 <GHC.Types.Int>_R
                 ->_R Trans
                          (<Graphics.UI.Fungen.Game.Game t s u v>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(Graphics.UI.Fungen.Game.Game t s u v, ())>_R))
                          (Sym (Graphics.UI.Fungen.Game.NTCo:IOGame[0]
                                    <t>_R <s>_R <u>_R <v>_R <()>_R))) -}
852acec218fa30fd409edcf751e2424f
  wait1 ::
    GHC.Types.Int
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 3,
     Strictness: <L,U(U)><S(LLLLSLLLLL),1*U(U,U,U,U,U(U),U,U,U,U,U(U))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ t
                   @ s
                   @ u
                   @ v
                   w :: GHC.Types.Int
                   w1 :: Graphics.UI.Fungen.Game.Game t s u v
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w1 of ww { Graphics.UI.Fungen.Game.Game ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case ww5
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <[Graphics.UI.Fungen.Text.Text]>_N) of ww11 { GHC.STRef.STRef ww12 ->
                 Graphics.UI.Fungen.Game.$wa25
                   @ t
                   @ s
                   @ u
                   @ v
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww12
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   w2 } }) -}
06f398cf25b1eb25acb26954083b6481
  wait2 ::
    GHC.Types.Int
    -> GHC.Types.Int
    -> Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Graphics.UI.Fungen.Game.Game t s u v, ()) #)
  {- Arity: 4, Strictness: <L,1*U(U)><L,1*U(U)><L,U><L,U> -}
aa9c8d25009f47aec6eb6fb849789038
  windowConfig ::
    Graphics.UI.Fungen.Game.Game t s u v
    -> GHC.IORef.IORef Graphics.UI.Fungen.Types.WindowConfig
  RecSel Graphics.UI.Fungen.Game.Game
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLL),1*U(A,A,A,A,A,A,1*U(U),A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ t @ s @ u @ v ds :: Graphics.UI.Fungen.Game.Game t s u v ->
                 case ds of wild { Graphics.UI.Fungen.Game.Game ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds7 }) -}
instance GHC.Base.Applicative [Graphics.UI.Fungen.Game.IOGame]
  = Graphics.UI.Fungen.Game.$fApplicativeIOGame
instance GHC.Base.Functor [Graphics.UI.Fungen.Game.IOGame]
  = Graphics.UI.Fungen.Game.$fFunctorIOGame
instance GHC.Base.Monad [Graphics.UI.Fungen.Game.IOGame]
  = Graphics.UI.Fungen.Game.$fMonadIOGame
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

